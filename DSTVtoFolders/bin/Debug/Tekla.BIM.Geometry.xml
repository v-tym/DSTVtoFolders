<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tekla.BIM.Geometry</name>
    </assembly>
    <members>
        <member name="T:Tekla.BIM.Geometry.AngleExtensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.AngleExtensions"/> class provides a set of static methods for querying values of type <see cref="T:Tekla.Common.Geometry.Angle"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.AngleExtensions.GetRotationMethod(Tekla.Common.Geometry.Angle,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Gets a method that rotates <see cref="T:Tekla.Common.Geometry.Vector3"/> values around <paramref name="rotationAxis"/> with the given <paramref name="angle"/>.
            </summary>
            <remarks>
            The returned delegate caches the rotation matrix and is therefore useful when multiple <see cref="T:Tekla.Common.Geometry.Vector3"/> values
            need to be rotated with the same <paramref name="angle"/> around the same <paramref name="rotationAxis"/>.
            </remarks>
            <param name="angle">The <see cref="T:Tekla.Common.Geometry.Angle"/> defining the total rotation.</param>
            <param name="rotationAxis">The axis to rotate around, as positioned in the work plane origin.</param>
            <returns>A method that rotates <see cref="T:Tekla.Common.Geometry.Vector3"/> values around <paramref name="rotationAxis"/> with the given <paramref name="angle"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.AngleExtensions.Perpendicular(Tekla.Common.Geometry.Angle,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether <paramref name="angle"/> represents a perpendicular angle.
            </summary>
            <param name="angle">The <see cref="T:Tekla.Common.Geometry.Angle"/> value.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the the angle is considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.AngleExtensions.Straight(Tekla.Common.Geometry.Angle,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether <paramref name="angle"/> represents a straight angle.
            </summary>
            <param name="angle">The <see cref="T:Tekla.Common.Geometry.Angle"/> value.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the the angle is considered as straight; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.AngleExtensions.Zero(Tekla.Common.Geometry.Angle,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether <paramref name="angle"/> represents a zero angle.
            </summary>
            <param name="angle">The <see cref="T:Tekla.Common.Geometry.Angle"/> value.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the the angle is considered as zero; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.AngleExtensions.GetRotationMatrix(Tekla.Common.Geometry.Angle,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Returns a rotation matrix defined by the given <paramref name="rotationAngle"/> and the given <paramref name="rotationAxis"/>.
            </summary>
            <param name="rotationAngle">The rotation <see cref="T:Tekla.Common.Geometry.Angle"/>.</param>
            <param name="rotationAxis">The rotation axis.</param>
            <returns>The rotation <see cref="T:Tekla.Common.Geometry.Matrix4"/>.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.Arc3Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Arc3Extensions"/> class provides a set of extension methods for <see cref="T:Tekla.Common.Geometry.Arc3"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Arc3Extensions.GetCurveLength(Tekla.Common.Geometry.Arc3)">
            <summary>
            Gets the length of the <paramref name="arc"/>'s curve.
            </summary>
            <param name="arc">The <see cref="T:Tekla.Common.Geometry.Arc3"/> to get the curve length for.</param>
            <returns>The length of the <paramref name="arc"/>'s curve.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Arc3Extensions.SetRadius(Tekla.Common.Geometry.Arc3,System.Double)">
            <summary>
            Gets a new <see cref="T:Tekla.Common.Geometry.Arc3"/> instance that has the given <paramref name="radius"/>.
            </summary>
            <param name="arc">The <see cref="T:Tekla.Common.Geometry.Arc3"/> to copy the default properties from.</param>
            <param name="radius">The radius of the <see cref="T:Tekla.Common.Geometry.Arc3"/> to return.</param>
            <returns>A new <see cref="T:Tekla.Common.Geometry.Arc3"/> instance that has the given <paramref name="radius"/>.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.AxisAlignedBox2Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.AxisAlignedBox2Extensions"/> class provides a set of extension methods for <see cref="T:Tekla.Common.Geometry.AxisAlignedBox2"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.AxisAlignedBox2Extensions.Intersects(Tekla.Common.Geometry.AxisAlignedBox2,Tekla.Common.Geometry.AxisAlignedBox2,Tekla.BIM.Geometry.GeometryTolerance)">
            <summary>
            Tests if the the axis aligned box intersects with the other.
            </summary>
            <param name="axisAlignedBox">The axis aligned box.</param>
            <param name="other">The other.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply.</param>
            <returns>True if the primitives do intersect, false otherwise.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.Box3Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Box3Extensions"/> class provides a set of extension methods for <see cref="T:Tekla.Common.Geometry.Box3"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Box3Extensions.GetCoordinateSystem(Tekla.Common.Geometry.Box3)">
            <summary>
            Gets the <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> defined by <paramref name="box"/>.
            </summary>
            <param name="box">The <see cref="T:Tekla.Common.Geometry.Box3"/> value to get the <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> value for.</param>
            <returns>The <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> defined by <paramref name="box"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Box3Extensions.GetCoordinateSystem(Tekla.Common.Geometry.Box3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> defined by <paramref name="box"/>.
            </summary>
            <param name="box">The <see cref="T:Tekla.Common.Geometry.Box3"/> value to get the <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> value for.</param>
            <param name="origin">The origin of the <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> to return.</param>
            <returns>The <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> defined by <paramref name="box"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Box3Extensions.Rotate(Tekla.Common.Geometry.Box3,Tekla.Common.Geometry.Angle,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Rotates the given <see cref="T:Tekla.Common.Geometry.Box3"/> around <paramref name="rotationAxis"/>.
            </summary>
            <param name="box">The <see cref="T:Tekla.Common.Geometry.Box3"/> to rotate.</param>
            <param name="angle">The <see cref="T:Tekla.Common.Geometry.Angle"/> to rotate <paramref name="box"/> with.</param>
            <param name="rotationAxis">The axis to rotate <paramref name="box"/> around.</param>
            <returns>The rotated <see cref="T:Tekla.Common.Geometry.Box3"/> value.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.Circle2Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Circle2Extensions"/> class provides a set of extension methods for the <see cref="T:Tekla.Common.Geometry.Circle2"/> type.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Circle2Extensions.FromThreePoints(Tekla.Common.Geometry.Circle2,Tekla.Common.Geometry.Vector2,Tekla.Common.Geometry.Vector2,Tekla.Common.Geometry.Vector2)">
            <summary>
            Creates a new instance of <see cref="T:Tekla.Common.Geometry.Circle2"/> struct defined by three given points on circle's edge.
            </summary>
            <param name="circle">Circle as extension method parameter.</param>
            <param name="startPoint">Start point.</param>
            <param name="endPoint">End point.</param>
            <param name="arcPoint">Point to define the circle.</param>
            <returns>new instance of <see cref="T:Tekla.Common.Geometry.Circle2"/> struct.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Circle2Extensions.GetAngle(Tekla.Common.Geometry.Circle2,Tekla.Common.Geometry.Vector2)">
            <summary>
            Gets an angle (zero - full circle) of a point on circle's edge.
            </summary>
            <param name="circle">Circle to count against.</param>
            <param name="point">Point for which the corresponding angle is calculated.</param>
            <returns>Calculated angle.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Circle2Extensions.ToArc2(Tekla.Common.Geometry.Circle2,Tekla.Common.Geometry.Vector2,Tekla.Common.Geometry.Vector2)">
            <summary>
            Creates a new instance of <see cref="T:Tekla.Common.Geometry.Arc2"/> struct defined by two points on circle's edge.
            </summary>
            <param name="circle">Circle to calculate against.</param>
            <param name="startPoint">Start point on circle's edge.</param>
            <param name="endPoint">End point on circle's edge.</param>
            <returns>New instance of <see cref="T:Tekla.Common.Geometry.Arc2"/> struct.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Circle2Extensions.CircumCentreOf3Points(Tekla.Common.Geometry.Vector2,Tekla.Common.Geometry.Vector2,Tekla.Common.Geometry.Vector2,Tekla.Common.Geometry.Vector2@,System.Boolean@)">
            <summary>
            Calculates the coordinates of the circumcentre of the triangle formed by given points.
            </summary>
            <param name="startPoint">Start point of an arc.</param>
            <param name="endPoint">End point of an arc.</param>
            <param name="arcPoint">Point to define the arc radius.</param>
            <param name="cirumCentre">The coordinates of the circumcentre as Vector2.</param>
            <param name="limit">Indicates if the circle radius has been limited to it's maximum (Half length of the chord defined by start point and end point).</param>
            <returns>True if success, otherwise false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.Circle3Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Circle3Extensions"/> class provides a set of extension methods for <see cref="T:Tekla.Common.Geometry.Circle3"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Circle3Extensions.GetCircumreference(Tekla.Common.Geometry.Circle3)">
            <summary>
            Gets the circumference of the <paramref name="circle"/>.
            </summary>
            <param name="circle">The <see cref="T:Tekla.Common.Geometry.Circle3"/> value to get the circumreference for.</param>
            <returns>The circumreference of <paramref name="circle"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Circle3Extensions.Rotate(Tekla.Common.Geometry.Circle3,Tekla.Common.Geometry.Angle)">
            <summary>
            Rotates the given <see cref="T:Tekla.Common.Geometry.Circle3"/> around its normal.
            </summary>
            <param name="circle">The <see cref="T:Tekla.Common.Geometry.Circle3"/> to rotate.</param>
            <param name="angle">The <see cref="T:Tekla.Common.Geometry.Angle"/> to rotate <paramref name="circle"/> with.</param>
            <returns>The rotated <see cref="T:Tekla.Common.Geometry.Circle3"/> value.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Circle3Extensions.SetRadius(Tekla.Common.Geometry.Circle3,System.Double)">
            <summary>
            Gets a new <see cref="T:Tekla.Common.Geometry.Circle3"/> instance that has the given <paramref name="radius"/>.
            </summary>
            <param name="circle">The <see cref="T:Tekla.Common.Geometry.Circle3"/> to copy the default properties from.</param>
            <param name="radius">The radius of the <see cref="T:Tekla.Common.Geometry.Circle3"/> to return.</param>
            <returns>A new <see cref="T:Tekla.Common.Geometry.Circle3"/> instance that has the given <paramref name="radius"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Circle3Extensions.ToPlane3(Tekla.Common.Geometry.Circle3)">
            <summary>
            Gets the <see cref="T:Tekla.Common.Geometry.Plane3"/> on which the given <see cref="T:Tekla.Common.Geometry.Circle3"/> is located.
            </summary>
            <param name="circle">The <see cref="T:Tekla.Common.Geometry.Circle3"/> to get the <see cref="T:Tekla.Common.Geometry.Plane3"/> for.</param>
            <returns>The <see cref="T:Tekla.Common.Geometry.Plane3"/> on which the given <see cref="T:Tekla.Common.Geometry.Circle3"/> is located.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.CollinearSegment3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.CollinearSegment3"/> class provides a set of extension methods for determining collinearity of <see cref="T:Tekla.Common.Geometry.Segment3"/> values.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.CollinearSegment3.Collinear(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Vector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether a <see cref="T:Tekla.Common.Geometry.Segment3"/> and a <see cref="T:Tekla.Common.Geometry.Vector3"/> are collinear.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="vector">The <see cref="T:Tekla.Common.Geometry.Vector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as collinear; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CollinearSegment3.Collinear(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether two <see cref="T:Tekla.Common.Geometry.Segment3"/> values are collinear.
            A set of segments is collinear if they lie on a single straight line.
            </summary>
            <param name="segment">The first <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="otherSegment">The other <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as collinear; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CollinearSegment3.Collinear(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Segment3},System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether a set of segments are collinear.
            A set of segments is collinear if they lie on a single straight line.
            </summary>
            <param name="segments">The <see cref="T:Tekla.Common.Geometry.Segment3"/> values to determine collinearity for.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as collinear; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.CollinearVector3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.CollinearVector3"/> class provides a set of extension methods for determining collinearity of <see cref="T:Tekla.Common.Geometry.Vector3"/> values.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.CollinearVector3.Collinear(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.Vector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether two points are collinear.
            A set of points is collinear if they lie on a single straight line.
            </summary>
            <param name="first">The first point.</param>
            <param name="direction">The direction of the line on which the points must be collinear.</param>
            <param name="other">The other point.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as collinear; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CollinearVector3.Collinear(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether a <see cref="T:Tekla.Common.Geometry.Vector3"/> and a <see cref="T:Tekla.Common.Geometry.Segment3"/> are collinear.
            </summary>
            <param name="vector">The <see cref="T:Tekla.Common.Geometry.Vector3"/>.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as collinear; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CollinearVector3.Collinear(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether three points are collinear.
            A set of points is collinear if they lie on a single straight line.
            </summary>
            <param name="value">The first point.</param>
            <param name="first">The first other point.</param>
            <param name="second">The second other point.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as collinear; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CollinearVector3.Collinear(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3},System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether a set of points are collinear.
            A set of points is collinear if they lie on a single straight line.
            </summary>
            <remarks>
            The algorithm may be inaccurate when e.g. the first point is exactly on the point-line, while the second point is located on the extreme tolerance to that line.
            Ideally we'd find the Line of Best-Fit for all points and check the distance of each point against that line, not some "random" line based on the first two points.
            Sadly, finding the Line of Best-Fit for 3D points currently is too expensive to implement, because we don't have an eigenvalue solver.
            </remarks>
            <param name="points">The points to determine collinearity for.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as collinear; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.ContainsFace3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.ContainsFace3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.BIM.Geometry.Face3"/> contains another geometric primitive.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.ContainsFace3.Contains(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Vector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> contains the given <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="point">The <see cref="T:Tekla.Common.Geometry.Vector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if <paramref name="face"/> contains <paramref name="point"/>; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.ContainsLine3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.ContainsLine3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.Common.Geometry.Line3"/> contains another geometric primitive.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.ContainsLine3.Contains(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Vector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Line3"/> contains the given <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="point">The <see cref="T:Tekla.Common.Geometry.Vector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if <paramref name="line"/> contains <paramref name="point"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ContainsLine3.Contains(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Line3"/> contains the given <see cref="T:Tekla.Common.Geometry.Segment3"/>.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if <paramref name="line"/> contains <paramref name="segment"/>; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.ContainsPlane3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.ContainsPlane3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.Common.Geometry.Plane3"/> contains another geometric primitive.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.ContainsPlane3.Contains(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Vector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Plane3"/> contains the given <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="point">The <see cref="T:Tekla.Common.Geometry.Vector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if <paramref name="plane"/> contains <paramref name="point"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ContainsPlane3.Contains(Tekla.Common.Geometry.Plane3,System.Collections.Generic.ICollection{Tekla.Common.Geometry.Vector3},System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Plane3"/> contains all the given points.
            </summary>
            <param name="plane">
            The <see cref="T:Tekla.Common.Geometry.Plane3"/>.
            </param>
            <param name="points">
            The points to be checked.
            </param>
            <param name="tolerance">
            The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.
            </param>
            <returns>
            True if <paramref name="plane"/> contains all the <paramref name="points"/>; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the <paramref name="points"/> is null or does not have any items in it.
            </exception>
        </member>
        <member name="M:Tekla.BIM.Geometry.ContainsPlane3.Contains(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Plane3"/> contains the given <see cref="T:Tekla.Common.Geometry.Line3"/>.
            </summary>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if <paramref name="plane"/> contains <paramref name="line"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ContainsPlane3.Contains(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Plane3"/> contains the given <see cref="T:Tekla.Common.Geometry.Segment3"/>.
            </summary>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if <paramref name="plane"/> contains <paramref name="segment"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ContainsPlane3.Contains(Tekla.Common.Geometry.Plane3,Tekla.BIM.Geometry.Face3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Plane3"/> contains the given <see cref="T:Tekla.BIM.Geometry.Face3"/>.
            </summary>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if <paramref name="plane"/> contains <paramref name="face"/>; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.ContainsSegment3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.ContainsSegment3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.Common.Geometry.Segment3"/> contains another geometric primitive.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.ContainsSegment3.Contains(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Vector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Segment3"/> contains the given <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="point">The <see cref="T:Tekla.Common.Geometry.Vector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if <paramref name="segment"/> contains <paramref name="point"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ContainsSegment3.Contains(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Segment3"/> contains the given <see cref="T:Tekla.Common.Geometry.Segment3"/>.
            </summary>
            <param name="segment">The first <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="otherSegment">The other <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if <paramref name="segment"/> contains <paramref name="otherSegment"/>; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.ConvexHullVector3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.ConvexHullVector3"/> class provides a set of extension methods that calculate
            a minimal convex polygon from any given set of points.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.ConvexHullVector3.MakeConvexProjectedPolygon(System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3},Tekla.Common.Geometry.Plane3)">
            <summary>
            Calculates the minimal convex polygon that includes all the given points as projected onto the given plane.
            Uses Jarvis march algorithm http://en.wikipedia.org/wiki/Gift_wrapping_algorithm
            Slowish, but for few points it doesn't make any difference.
            </summary>
            <param name="points">The points that should be included in the resulting polygon.</param>
            <param name="plane">The plane that the points should be projected to.</param>
            <returns>
            The points that form the convex polygon. 
            Empty list if no polygon was found. This can happen, for example, when input has fewer than 3 unique points.
            </returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ConvexHullVector3.MakeConvexPolygon(System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3})">
            <summary>
            Calculates the minimal convex polygon that includes all the given points.
            The algorithm assumes that all the points lie on a single plane.
            Uses Jarvis march algorithm http://en.wikipedia.org/wiki/Gift_wrapping_algorithm
            Slowish, but for few points it doesn't make any difference.
            </summary>
            <param name="points">The points that should be included in the resulting polygon.</param>
            <returns>
            The points that form the convex polygon. 
            Empty list if no polygon was found. This can happen, for example, when input has fewer than 3 unique points.
            </returns>
            <exception cref="T:System.ArgumentException">Thrown if the given points do not lie on one plane.</exception>
        </member>
        <member name="M:Tekla.BIM.Geometry.ConvexHullVector3.MakeConvexPolygon(System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3},Tekla.Common.Geometry.Plane3)">
            <summary>
            Calculates the minimal convex polygon that includes all the given points.
            The algorithm assumes that all the points lie on the given plane.
            Uses Jarvis march algorithm http://en.wikipedia.org/wiki/Gift_wrapping_algorithm
            Slowish, but for few points it doesn't make any difference.
            </summary>
            <param name="points">The points that should be included in the resulting polygon.</param>
            <param name="plane">The plane that the points lie on.</param>
            <returns>
            The points that form the convex polygon. 
            Empty list if no polygon was found. This can happen, for example, when input has fewer than 3 unique points.
            </returns>
            <exception cref="T:System.ArgumentException">Thrown if any of the given points do not lie on the given plane.</exception>
        </member>
        <member name="M:Tekla.BIM.Geometry.ConvexHullVector3.FindStartPointForJarvisMarch(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3})">
            <summary>
            Helper function for MakeConvexPolygon(). Finds start point for that algorithm.
            Any point known to be part of result polygon is fine, we choose the one with smallest x coordinate.
            If several points have the same x coordinate, the one of that set with smallest y is chosen. (This is to 
            avoid choosing a point exactly between two other points, as those should never be part of the result).
            </summary>
            <param name="candidatePoints">The candidate points to choose from</param>
            <returns>The found start point, or null if one was not found.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ConvexHullVector3.PerformJarvisMarch(System.Collections.Generic.ICollection{Tekla.Common.Geometry.Vector3},Tekla.Common.Geometry.Vector3)">
            <summary>
            Helper function for MakeConvexPolygon(). Finds points forming the convex polygon.
            </summary>
            <param name="candidatePoints">The candidate points to choose from.</param>
            <param name="startPoint">The point to start from. Known to be part of the result polygon.</param>
            <returns>The points forming the convex polygon in order.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.CoordinateSystem3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> struct defines a coordinate system in three-dimensional space.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.CoordinateSystem3.WorkPlane">
            <summary>
            Gets the <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> for the active work plane.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.CoordinateSystem3.origin">
            <summary>
            The origin.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.CoordinateSystem3.unitX">
            <summary>
            The direction of the X-axis.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.CoordinateSystem3.unitY">
            <summary>
            The direction of the Y-axis.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.CoordinateSystem3.unitZ">
            <summary>
            The direction of the Z-axis.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3.#ctor(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> struct.
            The value for <see cref="P:Tekla.BIM.Geometry.CoordinateSystem3.UnitZ"/> is the cross product of <paramref name="unitX"/> and <paramref name="unitY"/>. 
            </summary>
            <param name="origin">The origin of the coordinate system.</param>
            <param name="unitX">The direction of the X-axis of the coordinate system.</param>
            <param name="unitY">The direction of the Y-axis of the coordinate system.</param>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3.#ctor(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> struct.
            </summary>
            <param name="origin">The origin of the coordinate system.</param>
            <param name="unitX">The direction of the X-axis of the coordinate system.</param>
            <param name="unitY">The direction of the Y-axis of the coordinate system.</param>
            <param name="unitZ">The direction of the Z-axis of the coordinate system.</param>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3.Equals(System.Object)">
            <summary>
            Determines whether <paramref name="other"/> is of type <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/>
            and whether the current value equals <paramref name="other"/>.
            </summary>
            <param name="other">An <see cref="T:System.Object"/> instance to compare equality with.</param>
            <returns>A value indicating whether the current value equals <paramref name="other"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3.Equals(Tekla.BIM.Geometry.CoordinateSystem3)">
            <summary>
            Determines exact equality between two <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> values.
            </summary>
            <param name="other">A <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> value to compare equality with.</param>
            <returns>A value indicating whether the current value equals <paramref name="other"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3.GetHashCode">
            <summary>
            Returns the hash code for this value.
            </summary>
            <returns>A 32-bit signed integer that is the hash code for this value.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of the current <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> value.
            </summary>
            <returns>A <see cref="T:System.String"/> representation of the current <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> value.</returns>
        </member>
        <member name="P:Tekla.BIM.Geometry.CoordinateSystem3.Origin">
            <summary>
            Gets the origin.  
            </summary>
        </member>
        <member name="P:Tekla.BIM.Geometry.CoordinateSystem3.UnitX">
            <summary>
            Gets the direction of the X-axis.
            </summary>
        </member>
        <member name="P:Tekla.BIM.Geometry.CoordinateSystem3.UnitY">
            <summary>
            Gets the direction of the Y-axis.
            </summary>
        </member>
        <member name="P:Tekla.BIM.Geometry.CoordinateSystem3.UnitZ">
            <summary>
            Gets the direction of the Z-axis.
            </summary>
        </member>
        <member name="T:Tekla.BIM.Geometry.CoordinateSystem3Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3Extensions"/> class provides a set of extension methods for the <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> type.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3Extensions.AsPlane3(Tekla.BIM.Geometry.CoordinateSystem3)">
            <summary>
            Creates a <see cref="T:Tekla.Common.Geometry.Plane3"/> in the Z=0 plane of the coordinate system
            </summary>
            <param name="coordinateSystem">The <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> to create the <see cref="T:Tekla.Common.Geometry.Plane3"/> from.</param>
            <returns>A <see cref="T:Tekla.Common.Geometry.Plane3"/> value.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3Extensions.GetTransformMethod(Tekla.BIM.Geometry.CoordinateSystem3,Tekla.BIM.Geometry.CoordinateSystem3)">
            <summary>
            Gets a method that transforms <see cref="T:Tekla.Common.Geometry.Vector3"/> values from one <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> to another.
            </summary>
            <remarks>
            The returned delegate caches the transformation matrices and is therefore useful when multiple <see cref="T:Tekla.Common.Geometry.Vector3"/> values
            need to be transformed from <paramref name="coordinateSystem"/> to <paramref name="targetCoordinateSystem"/>.
            </remarks>
            <param name="coordinateSystem">The source <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/>.</param>
            <param name="targetCoordinateSystem">The target <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/>.</param>
            <returns>A method that transforms <see cref="T:Tekla.Common.Geometry.Vector3"/> values from one <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> to another.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3Extensions.Rotate(Tekla.BIM.Geometry.CoordinateSystem3,Tekla.Common.Geometry.Angle,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Rotates the <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> around its origin with the given <paramref name="angle"/>.
            </summary>
            <param name="coordinateSystem">The <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> to rotate.</param>
            <param name="angle">The <see cref="T:Tekla.Common.Geometry.Angle"/> to rotate <paramref name="coordinateSystem"/> with.</param>
            <param name="axisDirection">The direction of the axis to rotate <paramref name="coordinateSystem"/> around.</param>
            <returns>A new <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> rotated with the given <paramref name="angle"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3Extensions.SetOrigin(Tekla.BIM.Geometry.CoordinateSystem3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Constructs a new <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> with the given <paramref name="origin"/>.
            </summary>
            <param name="coordinateSystem">The <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> to copy the axes from.</param>
            <param name="origin">The value to set to <see cref="P:Tekla.BIM.Geometry.CoordinateSystem3.Origin"/>.</param>
            <returns>A new <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> with the given <paramref name="origin"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3Extensions.Transform(Tekla.BIM.Geometry.CoordinateSystem3,Tekla.Common.Geometry.Vector3,Tekla.BIM.Geometry.CoordinateSystem3)">
            <summary>
            Transforms the given <see cref="T:Tekla.Common.Geometry.Vector3"/> value from <paramref name="coordinateSystem"/> to <paramref name="targetCoordinateSystem"/>.
            </summary>
            <param name="coordinateSystem">The <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> in which <paramref name="vector"/> is originally defined.</param>
            <param name="vector">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to transform.</param>
            <param name="targetCoordinateSystem">The <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> to transform <paramref name="vector"/> to.</param>
            <returns>The transformed value of <paramref name="vector"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3Extensions.Transform(Tekla.BIM.Geometry.CoordinateSystem3,Tekla.Common.Geometry.Segment3,Tekla.BIM.Geometry.CoordinateSystem3)">
            <summary>
            Transforms the given <see cref="T:Tekla.Common.Geometry.Segment3"/> value from <paramref name="coordinateSystem"/> to <paramref name="targetCoordinateSystem"/>.
            </summary>
            <param name="coordinateSystem">The <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> in which <paramref name="segment"/> is originally defined.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> to transform.</param>
            <param name="targetCoordinateSystem">The <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> to transform <paramref name="segment"/> to.</param>
            <returns>The transformed value of <paramref name="segment"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3Extensions.ToCoordinateSystem(Tekla.BIM.Geometry.CoordinateSystem3)">
            <summary>
            Gets the transformation <see cref="T:Tekla.Common.Geometry.Matrix4"/> to go from global coordinates to the given <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/>.
            </summary>
            <param name="coordinateSystem">The target <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> of the transformation <see cref="T:Tekla.Common.Geometry.Matrix4"/> to return.</param>
            <returns>The transformation <see cref="T:Tekla.Common.Geometry.Matrix4"/> to go from global coordinates to the given <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.CoordinateSystem3Extensions.FromCoordinateSystem(Tekla.BIM.Geometry.CoordinateSystem3)">
            <summary>
            Gets the transformation <see cref="T:Tekla.Common.Geometry.Matrix4"/> to go from the given <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> to global coordinates.
            </summary>
            <param name="coordinateSystem">The source <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> of the transformation <see cref="T:Tekla.Common.Geometry.Matrix4"/> to return.</param>
            <returns>The transformation <see cref="T:Tekla.Common.Geometry.Matrix4"/> to go from the given <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> to global coordinates.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.DistanceFace3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.DistanceFace3"/> class provides a set of extension methods for distance calculus between <see cref="T:Tekla.BIM.Geometry.Face3"/> an <see cref="N:Tekla.Common.Geometry"/> primitives.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.DistanceTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Distance from a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the distance to.</param>
            <param name="point">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to get the distance to.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.DistanceTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Line3)">
            <summary>
            Distance from a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Line3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the distance to.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> to get the distance to.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestPointTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the closest point of a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest point from.</param>
            <param name="point">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to get the closest point to.</param>
            <returns>The closest point.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestPointTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Vector3,System.Double@)">
            <summary>
            Gets the closest point of a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest point from.</param>
            <param name="point">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to get the closest point to.</param>
            <param name="distance">The distance between the <paramref name="point"/> and the closest face point.</param>
            <returns>The closest point.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestPointTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Line3)">
            <summary>
            Gets the closest point of a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Line3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest point from.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> to get the closest point to.</param>
            <returns>The closest point.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestPointTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Line3,System.Double@)">
            <summary>
            Gets the closest point of a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Line3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest point from.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> to get the closest point to.</param>
            <param name="distance">The distance between the <paramref name="line"/> and the closest face point.</param>
            <returns>The closest point.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestCornerTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the closest corner of a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest corner from.</param>
            <param name="point">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to get the closest corner to.</param>
            <returns>The closest corner.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestCornerTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Vector3,System.Double@)">
            <summary>
            Gets the closest corner of a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest corner from.</param>
            <param name="point">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to get the closest corner to.</param>
            <param name="distance">The distance between the <paramref name="point"/> and the corner.</param>
            <returns>The closest corner.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestCornerTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Line3)">
            <summary>
            Gets the closest corner of a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Line3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest corner from.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> to get the closest corner to.</param>
            <returns>The closest corner.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestCornerTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Line3,System.Double@)">
            <summary>
            Gets the closest corner of a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Line3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest corner from.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> to get the closest corner to.</param>
            <param name="distance">The distance between the <paramref name="line"/> and the corner.</param>
            <returns>The closest corner.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestEdgeTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the closest edge of a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest edge from.</param>
            <param name="point">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to get the closest edge to.</param>
            <returns>The closest edge.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestEdgeTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Vector3,System.Double@)">
            <summary>
            Gets the closest edge of a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Vector3"/> and outputs the <paramref name="distance"/> to that edge.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest edge from.</param>
            <param name="point">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to get the closest edge to.</param>
            <param name="distance">The distance between the <paramref name="point"/> and the edge.</param>
            <returns>The closest edge.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestEdgeTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Line3)">
            <summary>
            Gets the closest edge of a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Line3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest edge from.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> to get the closest edge to.</param>
            <returns>The closest edge.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestEdgeTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Line3,System.Double@)">
            <summary>
            Gets the closest edge of a <see cref="T:Tekla.BIM.Geometry.Face3"/> to a <see cref="T:Tekla.Common.Geometry.Line3"/> and outputs the <paramref name="distance"/> to that edge.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest edge from.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> to get the closest edge to.</param>
            <param name="distance">The distance between the <paramref name="line"/> and the edge.</param>
            <returns>The closest edge.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestCornerTo``1(Tekla.BIM.Geometry.Face3,``0,System.Func{Tekla.Common.Geometry.Vector3,``0,System.Double},System.Double@)">
            <summary>
            Gets the closest corner of <paramref name="face"/> to any <paramref name="value"/>.
            The distances between <paramref name="value"/> and the <paramref name="face"/> edges are calculated by <paramref name="getDistance"/>.
            </summary>
            <typeparam name="T">The type of value to get the closest corner to.</typeparam>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest corner from.</param>
            <param name="value">The value to get the closest corner to.</param>
            <param name="getDistance">The method to get distances between the corner and <paramref name="value"/> with.</param>
            <param name="distance">The distance between the closest corner and <paramref name="value"/>.</param>
            <returns>The closest corner of <paramref name="face"/> to <paramref name="value"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DistanceFace3.ClosestEdgeTo``1(Tekla.BIM.Geometry.Face3,``0,System.Func{Tekla.Common.Geometry.Segment3,``0,System.Double},System.Double@)">
            <summary>
            Gets the closest edge of <paramref name="face"/> to any <paramref name="value"/>.
            The distances between <paramref name="value"/> and the <paramref name="face"/> edges are calculated by <paramref name="getDistance"/>.
            </summary>
            <typeparam name="T">The type of value to get the closest edge to.</typeparam>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the closest edge from.</param>
            <param name="value">The value to get the closest edge to.</param>
            <param name="getDistance">The method to get distances between the edges and <paramref name="value"/> with.</param>
            <param name="distance">The distance between the closest edge and <paramref name="value"/>.</param>
            <returns>The closest edge of <paramref name="face"/> to <paramref name="value"/>.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.DoubleExtensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.DoubleExtensions"/> class provides a set of extension methods for <see cref="T:System.Double"/> values.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.DoubleExtensions.GreaterThan(System.Double,System.Double[])">
            <summary>
            Gets a value indicating whether <paramref name="value"/> is greater than all <paramref name="otherValues"/>.
            </summary>
            <param name="value">The value to check.</param>
            <param name="otherValues">The other values.</param>
            <returns>True if <paramref name="value"/> is greater than all <paramref name="otherValues"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DoubleExtensions.GreaterOrEqual(System.Double,System.Double[])">
            <summary>
            Gets a value indicating whether <paramref name="value"/> is greater than or equal to all <paramref name="otherValues"/>.
            </summary>
            <param name="value">The value to check.</param>
            <param name="otherValues">The other values.</param>
            <returns>True if <paramref name="value"/> is greater than or equal to all <paramref name="otherValues"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DoubleExtensions.GreaterOrEqual(System.Double,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance},System.Double[])">
            <summary>
            Gets a value indicating whether <paramref name="value"/> is greater than or equal to all <paramref name="otherValues"/>.
            </summary>
            <param name="value">The value to check.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <param name="otherValues">The other values.</param>
            <returns>True if <paramref name="value"/> is greater than or equal to all <paramref name="otherValues"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DoubleExtensions.LessThan(System.Double,System.Double[])">
            <summary>
            Gets a value indicating whether <paramref name="value"/> is less than all <paramref name="otherValues"/>.
            </summary>
            <param name="value">The value to check.</param>
            <param name="otherValues">The other values.</param>
            <returns>True if <paramref name="value"/> is less than all <paramref name="otherValues"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DoubleExtensions.LessOrEqual(System.Double,System.Double[])">
            <summary>
            Gets a value indicating whether <paramref name="value"/> is less than or equal to all <paramref name="otherValues"/>.
            </summary>
            <param name="value">The value to check.</param>
            <param name="otherValues">The other values.</param>
            <returns>True if <paramref name="value"/> is less than or equal to all <paramref name="otherValues"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DoubleExtensions.LessOrEqual(System.Double,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance},System.Double[])">
            <summary>
            Gets a value indicating whether <paramref name="value"/> is less than or equal to all <paramref name="otherValues"/>.
            </summary>
            <param name="value">The value to check.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <param name="otherValues">The other values.</param>
            <returns>True if <paramref name="value"/> is less than or equal to all <paramref name="otherValues"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.DoubleExtensions.GetValidValue(System.Double)">
            <summary>
            Gets the valid value for the given <see cref="T:System.Double"/>.
            </summary>
            <param name="value">The value to get the valid value for.</param>
            <returns>The valid value.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.EdgeArc3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.EdgeArc3"/> class provides a set of static methods for querying objects of type <see cref="T:Tekla.Common.Geometry.Arc3"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.EdgeArc3.GetEdgePoints(Tekla.Common.Geometry.Arc3)">
            <summary>
            Gets the edge points of <paramref name="arc"/> as a list of <see cref="T:Tekla.Common.Geometry.Vector3"/> instances.
            </summary>
            <param name="arc">The <see cref="T:Tekla.Common.Geometry.Arc3"/> to get the edge for.</param>
            <returns>The edge of <paramref name="arc"/> as a list of <see cref="T:Tekla.Common.Geometry.Vector3"/> instances.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EdgeArc3.GetEdgePoints(Tekla.Common.Geometry.Arc3,System.Int32)">
            <summary>
            Gets the edge points of <paramref name="arc"/> as a list of <see cref="T:Tekla.Common.Geometry.Vector3"/> instances.
            </summary>
            <param name="arc">The <see cref="T:Tekla.Common.Geometry.Arc3"/> to get the edge for.</param>
            <param name="edgePointCount">The number of points to represent the edge with.</param>
            <returns>The edge of <paramref name="arc"/> as a list of <see cref="T:Tekla.Common.Geometry.Vector3"/> instances.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EdgeArc3.GetEdgeSegments(Tekla.Common.Geometry.Arc3)">
            <summary>
            Gets the edge of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Segment3"/> instances.
            </summary>
            <param name="circle">The <see cref="T:Tekla.Common.Geometry.Circle3"/> to get the edge for.</param>
            <returns>The edge of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Segment3"/> instances.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EdgeArc3.GetEdgeSegments(Tekla.Common.Geometry.Arc3,System.Int32,System.Boolean)">
            <summary>
            Gets the edge of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Segment3"/> instances.
            </summary>
            <param name="circle">The <see cref="T:Tekla.Common.Geometry.Circle3"/> to get the edge for.</param>
            <param name="edgePointCount">The number of points to represent the edge with.</param>
            <param name="asClosedLoop">Indicates whether or not the last point must be connected to the first point.</param>
            <returns>The edge of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Segment3"/> instances.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EdgeArc3.GetDefaultEdgePointsCount(Tekla.Common.Geometry.Arc3)">
            <summary>
            Gets the default number of points to define the edge of the <paramref name="arc"/> with.
            </summary>
            <param name="arc">The circle to get the default number of edge points for.</param>
            <returns>The default number of edge points to use for defining the edge of <paramref name="arc"/>.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.EdgeCircle3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.EdgeCircle3"/> class provides a set of static methods for querying objects of type <see cref="T:Tekla.Common.Geometry.Circle3"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.EdgeCircle3.GetEdgePoints(Tekla.Common.Geometry.Circle3)">
            <summary>
            Gets the edge points of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Vector3"/> instances.
            </summary>
            <param name="circle">The <see cref="T:Tekla.Common.Geometry.Circle3"/> to get the edge for.</param>
            <returns>The edge of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Vector3"/> instances.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EdgeCircle3.GetEdgePoints(Tekla.Common.Geometry.Circle3,System.Int32)">
            <summary>
            Gets the edge points of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Vector3"/> instances.
            </summary>
            <param name="circle">The <see cref="T:Tekla.Common.Geometry.Circle3"/> to get the edge for.</param>
            <param name="edgePointCount">The number of points to represent the edge with.</param>
            <returns>The edge of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Vector3"/> instances.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EdgeCircle3.GetEdgeSegments(Tekla.Common.Geometry.Circle3)">
            <summary>
            Gets the edge of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Segment3"/> instances.
            </summary>
            <param name="circle">The <see cref="T:Tekla.Common.Geometry.Circle3"/> to get the edge for.</param>
            <returns>The edge of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Segment3"/> instances.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EdgeCircle3.GetEdgeSegments(Tekla.Common.Geometry.Circle3,System.Int32)">
            <summary>
            Gets the edge of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Segment3"/> instances.
            </summary>
            <param name="circle">The <see cref="T:Tekla.Common.Geometry.Circle3"/> to get the edge for.</param>
            <param name="edgePointCount">The number of points to represent the edge with.</param>
            <returns>The edge of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Segment3"/> instances.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EdgeCircle3.GetEdgeSegmentsOnRotation(Tekla.Common.Geometry.Circle3,System.Int32)">
            <summary>
            Gets the edge of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Segment3"/> instances when rotation is on going.
            Only one fourth of the circle is drawn in solid line. The rest of the circle only every second segment is drawn.
            </summary>
            <param name="circle">The circle.</param>
            <param name="edgePointCount">The edge point count.</param>
            <returns>The edge of <paramref name="circle"/> as a list of <see cref="T:Tekla.Common.Geometry.Segment3"/> instances when rotation is on going.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EdgeCircle3.GetDefaultEdgePointsCount(Tekla.Common.Geometry.Circle3)">
            <summary>
            Gets the default number of points to define the edge of the <paramref name="circle"/> with.
            </summary>
            <param name="circle">The circle to get the default number of edge points for.</param>
            <returns>The default number of edge points to use for defining the edge of <paramref name="circle"/>.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.EquivalentExtensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.EquivalentExtensions"/> class provides a set of extension methods to determine equality
            between double precision values according to a specified tolerance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions.Equivalent(System.Double,System.Double)">
            <summary>
            Determines whether the specified <see cref="T:System.Double"/> is equivalent to the other <see cref="T:System.Double"/> in terms of distance comparison.
            </summary>
            <param name="distance">The first <see cref="T:System.Double"/>.</param>
            <param name="otherDistance">The other <see cref="T:System.Double"/>.</param>
            <returns>True if the specified <see cref="T:System.Double"/> is equivalent to the other <see cref="T:System.Double"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions.Equivalent(System.Double,System.Double,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:System.Double"/> is equivalent to the other <see cref="T:System.Double"/> in terms of distance comparison.
            </summary>
            <param name="distance">The first <see cref="T:System.Double"/>.</param>
            <param name="otherDistance">The other <see cref="T:System.Double"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:System.Double"/> is equivalent to the other <see cref="T:System.Double"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions.Equivalent(Tekla.Common.Geometry.Angle,Tekla.Common.Geometry.Angle)">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Angle"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Angle"/>.
            </summary>
            <param name="angle">The first <see cref="T:Tekla.Common.Geometry.Angle"/>.</param>
            <param name="otherAngle">The other <see cref="T:Tekla.Common.Geometry.Angle"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Angle"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Angle"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions.Equivalent(Tekla.Common.Geometry.Angle,Tekla.Common.Geometry.Angle,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Angle"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Angle"/>.
            </summary>
            <param name="angle">The first <see cref="T:Tekla.Common.Geometry.Angle"/>.</param>
            <param name="otherAngle">The other <see cref="T:Tekla.Common.Geometry.Angle"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Angle"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Angle"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions.ZeroAngle(System.Double,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <paramref name="value"/> is zero in terms of angles.
            </summary>
            <param name="value">The value to check against zero.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="value"/> can be considered as zero; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions.ZeroAngle(Tekla.Common.Geometry.Angle,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <paramref name="value"/> is zero in terms of angles.
            </summary>
            <param name="value">The value to check against zero.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="value"/> can be considered as zero; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions.ZeroLength(System.Double,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <paramref name="value"/> is zero in terms of length and distance.
            </summary>
            <param name="value">The value to check against zero.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="value"/> can be considered as zero; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.EquivalentExtensions2">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.EquivalentExtensions2"/> class provides a set of extension methods to determine equality
            between 2D values according to a specified tolerance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions2.Equivalent(Tekla.Common.Geometry.UnitVector2,Tekla.Common.Geometry.UnitVector2)">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.UnitVector2"/> is equal to the other <see cref="T:Tekla.Common.Geometry.UnitVector2"/>.
            </summary>
            <param name="direction">The first <see cref="T:Tekla.Common.Geometry.UnitVector2"/>.</param>
            <param name="otherDirection">The other <see cref="T:Tekla.Common.Geometry.UnitVector2"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.UnitVector2"/> is equal to the other <see cref="T:Tekla.Common.Geometry.UnitVector2"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions2.Equivalent(Tekla.Common.Geometry.UnitVector2,Tekla.Common.Geometry.UnitVector2,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.UnitVector2"/> is equal to the other <see cref="T:Tekla.Common.Geometry.UnitVector2"/>.
            </summary>
            <param name="direction">The first <see cref="T:Tekla.Common.Geometry.UnitVector2"/>.</param>
            <param name="otherDirection">The other <see cref="T:Tekla.Common.Geometry.UnitVector2"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.UnitVector2"/> is equal to the other <see cref="T:Tekla.Common.Geometry.UnitVector2"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions2.Equivalent(Tekla.Common.Geometry.Vector2,Tekla.Common.Geometry.Vector2)">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Vector2"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Vector2"/>.
            </summary>
            <param name="vector">The first <see cref="T:Tekla.Common.Geometry.Vector2"/>.</param>
            <param name="otherVector">The other <see cref="T:Tekla.Common.Geometry.Vector2"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Vector2"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Vector2"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions2.Equivalent(Tekla.Common.Geometry.Vector2,Tekla.Common.Geometry.Vector2,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Vector2"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Vector2"/>.
            </summary>
            <param name="vector">The first <see cref="T:Tekla.Common.Geometry.Vector2"/>.</param>
            <param name="otherVector">The other <see cref="T:Tekla.Common.Geometry.Vector2"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Vector2"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Vector2"/>; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.EquivalentExtensions3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.EquivalentExtensions3"/> class provides a set of extension methods to determine equality
            between 3D values according to a specified tolerance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.
            </summary>
            <param name="direction">The first <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="otherDirection">The other <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.UnitVector3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.
            </summary>
            <param name="direction">The first <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="otherDirection">The other <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.UnitVector3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Vector3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="vector">The first <see cref="T:Tekla.Common.Geometry.Vector3"/>.</param>
            <param name="otherVector">The other <see cref="T:Tekla.Common.Geometry.Vector3"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Vector3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Vector3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Vector3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="vector">The first <see cref="T:Tekla.Common.Geometry.Vector3"/>.</param>
            <param name="otherVector">The other <see cref="T:Tekla.Common.Geometry.Vector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Vector3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Vector3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Line3)">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Line3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Line3"/>.
            </summary>
            <param name="line">The first <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="otherLine">The other <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Line3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Line3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Line3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Line3"/>.
            </summary>
            <param name="line">The first <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="otherLine">The other <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Line3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Line3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Segment3)">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Segment3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Segment3"/>.
            </summary>
            <param name="segment">The first <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="otherSegment">The other <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Segment3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Segment3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Segment3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Segment3"/>.
            </summary>
            <param name="segment">The first <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="otherSegment">The other <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Segment3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Segment3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Plane3)">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Plane3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Plane3"/>.
            </summary>
            <param name="plane">The first <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="otherPlane">The other <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Plane3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Plane3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Plane3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Plane3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Plane3"/>.
            </summary>
            <param name="plane">The first <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="otherPlane">The other <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Plane3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Plane3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.BIM.Geometry.Face3,Tekla.BIM.Geometry.Face3)">
            <summary>
            Determines whether the specified <see cref="T:Tekla.BIM.Geometry.Face3"/> is equivalent to the other <see cref="T:Tekla.BIM.Geometry.Face3"/>.
            </summary>
            <param name="face">The first <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="otherFace">The other <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.BIM.Geometry.Face3"/> is equal to the other <see cref="T:Tekla.BIM.Geometry.Face3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.BIM.Geometry.Face3,Tekla.BIM.Geometry.Face3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.BIM.Geometry.Face3"/> is equivalent to the other <see cref="T:Tekla.BIM.Geometry.Face3"/>.
            </summary>
            <param name="face">The first <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="otherFace">The other <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.BIM.Geometry.Face3"/> is equal to the other <see cref="T:Tekla.BIM.Geometry.Face3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.BIM.Geometry.PolySegment3,Tekla.BIM.Geometry.PolySegment3)">
            <summary>
            Determines whether the specified <see cref="T:Tekla.BIM.Geometry.PolySegment3"/> is equivalent to the other <see cref="T:Tekla.BIM.Geometry.PolySegment3"/>.
            </summary>
            <param name="polySegment">The first <see cref="T:Tekla.BIM.Geometry.PolySegment3"/>.</param>
            <param name="otherPolySegment">The other <see cref="T:Tekla.BIM.Geometry.PolySegment3"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.BIM.Geometry.PolySegment3"/> is equal to the other <see cref="T:Tekla.BIM.Geometry.PolySegment3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.BIM.Geometry.PolySegment3,Tekla.BIM.Geometry.PolySegment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.BIM.Geometry.PolySegment3"/> is equivalent to the other <see cref="T:Tekla.BIM.Geometry.PolySegment3"/>.
            </summary>
            <param name="polySegment">The first <see cref="T:Tekla.BIM.Geometry.PolySegment3"/>.</param>
            <param name="otherPolySegment">The other <see cref="T:Tekla.BIM.Geometry.PolySegment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.BIM.Geometry.PolySegment3"/> is equal to the other <see cref="T:Tekla.BIM.Geometry.PolySegment3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.AxisAlignedBox3,Tekla.Common.Geometry.AxisAlignedBox3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.AxisAlignedBox3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.AxisAlignedBox3"/>.
            </summary>
            <param name="axisAlignedBox">The first <see cref="T:Tekla.Common.Geometry.AxisAlignedBox3"/>.</param>
            <param name="otherAxisAlignedBox">The other <see cref="T:Tekla.Common.Geometry.AxisAlignedBox3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.AxisAlignedBox3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.AxisAlignedBox3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.Circle3,Tekla.Common.Geometry.Circle3)">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Circle3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Circle3"/>.
            </summary>
            <param name="circle">The first <see cref="T:Tekla.Common.Geometry.Circle3"/>.</param>
            <param name="otherCircle">The other <see cref="T:Tekla.Common.Geometry.Circle3"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Circle3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Circle3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.Circle3,Tekla.Common.Geometry.Circle3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Circle3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Circle3"/>.
            </summary>
            <param name="circle">The first <see cref="T:Tekla.Common.Geometry.Circle3"/>.</param>
            <param name="otherCircle">The other <see cref="T:Tekla.Common.Geometry.Circle3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Circle3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Circle3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.Arc3,Tekla.Common.Geometry.Arc3)">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Arc3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Arc3"/>.
            </summary>
            <param name="arc">The first <see cref="T:Tekla.Common.Geometry.Arc3"/>.</param>
            <param name="otherArc">The other <see cref="T:Tekla.Common.Geometry.Arc3"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Arc3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Arc3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.Common.Geometry.Arc3,Tekla.Common.Geometry.Arc3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.Common.Geometry.Arc3"/> is equivalent to the other <see cref="T:Tekla.Common.Geometry.Arc3"/>.
            </summary>
            <param name="arc">The first <see cref="T:Tekla.Common.Geometry.Arc3"/>.</param>
            <param name="otherArc">The other <see cref="T:Tekla.Common.Geometry.Arc3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.Common.Geometry.Arc3"/> is equal to the other <see cref="T:Tekla.Common.Geometry.Arc3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.BIM.Geometry.CoordinateSystem3,Tekla.BIM.Geometry.CoordinateSystem3)">
            <summary>
            Determines whether the specified <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> is equivalent to the other <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/>.
            </summary>
            <param name="coordSys">The first <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/>.</param>
            <param name="otherCoordSys">The other <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> is equal to the other <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.Equivalent(Tekla.BIM.Geometry.CoordinateSystem3,Tekla.BIM.Geometry.CoordinateSystem3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> is equivalent to the other <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/>.
            </summary>
            <param name="coordSys">The first <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/>.</param>
            <param name="otherCoordSys">The other <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the specified <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> is equal to the other <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.ZeroVector(Tekla.Common.Geometry.Vector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <paramref name="vector"/> is equivalent to <see cref="P:Tekla.Common.Geometry.Vector3.Zero"/>.
            </summary>
            <param name="vector">The vector to check against <see cref="P:Tekla.Common.Geometry.Vector3.Zero"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="vector"/> can be considered as <see cref="P:Tekla.Common.Geometry.Vector3.Zero"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.EquivalentExtensions3.ZeroVector(Tekla.Common.Geometry.UnitVector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <paramref name="unitVector"/> is equivalent to a zero direction.
            </summary>
            <param name="unitVector">The vector to check.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="unitVector"/> can be considered as a zero vector; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.Face3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Face3"/> class represents a face.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.Face3.plane">
            <summary>
            The face plane.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.Face3.contourPoints">
            <summary>
            The read-only list of contour points of the face.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.Face3.innerCuts">
            <summary>
            The read-only list of the cuts of the face.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3.#ctor(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3})">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.BIM.Geometry.Face3"/> class.
            </summary>
            <param name="points">The face contour points.</param>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3.#ctor(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3},System.Collections.Generic.IEnumerable{Tekla.BIM.Geometry.Face3})">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.BIM.Geometry.Face3"/> class.
            </summary>
            <param name="points">The face contour points.</param>
            <param name="cuts">The cutting faces. </param>
            <exception cref="T:System.ArgumentException">
            Thrown when the number of points is less than three or when the normal of the face could not be defined.
            </exception>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3.#ctor(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3},Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.BIM.Geometry.Face3"/> class.
            </summary>
            <param name="points">The face contour points.</param>
            <param name="normal">The face normal.</param>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3.#ctor(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3},System.Collections.Generic.IEnumerable{Tekla.BIM.Geometry.Face3},Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.BIM.Geometry.Face3"/> class.
            </summary>
            <param name="points">The face contour points.</param>
            <param name="cuts">The cutting faces. </param>
            <param name="normal">The face normal.</param>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3.#ctor(Tekla.BIM.Geometry.Face3)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.BIM.Geometry.Face3"/> class.
            </summary>
            <param name="face">The face to copy.</param>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3.Equals(Tekla.BIM.Geometry.Face3)">
            <summary>
            Indicates whether the current <see cref="T:Tekla.BIM.Geometry.Face3"/> is equal to another <see cref="T:Tekla.BIM.Geometry.Face3"/>.
            </summary>
            <returns>True if the current <see cref="T:Tekla.BIM.Geometry.Face3"/> is equal to the <paramref name="other"/> parameter; Otherwise, false.</returns>
            <param name="other">A <see cref="T:Tekla.BIM.Geometry.Face3"/> to compare with this <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="other">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            True if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, false.
            </returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance.</returns>
        </member>
        <member name="P:Tekla.BIM.Geometry.Face3.Points">
            <summary>
            Gets the read-only list of contour points of the face.
            </summary>
        </member>
        <member name="P:Tekla.BIM.Geometry.Face3.Cuts">
            <summary>
            Gets the read-only list of cutting inner loops of the face.
            </summary>
        </member>
        <member name="P:Tekla.BIM.Geometry.Face3.Normal">
            <summary>
            Gets the face normal, which is the up direction of the face.
            </summary>
        </member>
        <member name="P:Tekla.BIM.Geometry.Face3.Plane">
            <summary>
            Gets the face plane.
            </summary>
        </member>
        <member name="T:Tekla.BIM.Geometry.Face3Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Face3Extensions"/> class provides a set of query methods for the <see cref="T:Tekla.BIM.Geometry.Face3"/> class.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3Extensions.Area(Tekla.BIM.Geometry.Face3)">
            <summary>
            Gets the surface area of the <see cref="T:Tekla.BIM.Geometry.Face3"/> value.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> value to get the surface area of.</param>
            <returns>The surface area of <paramref name="face"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3Extensions.GetEdgeSegments(Tekla.BIM.Geometry.Face3)">
            <summary>
            Gets the outer contours of the face as a collection of <see cref="T:Tekla.Common.Geometry.Segment3"/> values.
            Modifying the returned list does not modify the <see cref="T:Tekla.BIM.Geometry.Face3"/> value.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to use.</param>
            <returns>The outer contours of the <see cref="T:Tekla.BIM.Geometry.Face3"/> as a list of <see cref="T:Tekla.Common.Geometry.Segment3"/> values.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3Extensions.GetCutEdgeSegments(Tekla.BIM.Geometry.Face3)">
            <summary>
            Gets the inner loop (cut) contour points of the face as a collection of <see cref="T:Tekla.Common.Geometry.Segment3"/> values.
            Points from different inner loops are returned in the one and same list.
            Modifying the returned list does not modify the <see cref="T:Tekla.BIM.Geometry.Face3"/> value.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to use.</param>
            <returns>The inner loop contour points of the <see cref="T:Tekla.BIM.Geometry.Face3"/> as a list of <see cref="T:Tekla.Common.Geometry.Segment3"/> values.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3Extensions.Invert(Tekla.BIM.Geometry.Face3)">
            <summary>
            Inverts the order of the contour points of a <see cref="T:Tekla.BIM.Geometry.Face3"/> value.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to get the inverted value for.</param>
            <returns>An inverted <see cref="T:Tekla.BIM.Geometry.Face3"/>, for <paramref name="face"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3Extensions.Translate(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Translates a <see cref="T:Tekla.BIM.Geometry.Face3"/> along a given <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to translate.</param>
            <param name="moveVector">The translation <see cref="T:Tekla.Common.Geometry.Vector3"/>.</param>
            <returns>The translated <see cref="T:Tekla.BIM.Geometry.Face3"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Face3Extensions.IsSelfIntersecting(Tekla.BIM.Geometry.Face3)">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> is self-intersecting.
            </summary>
            <param name="face">The face to check.</param>
            <returns>True if the face is self-intersecting.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.GeometryTolerance">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> struct provides definitions of tolerance values.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.GeometryTolerance.ExactDistanceZero">
            <summary>
            The exact absolute zero distance.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.GeometryTolerance.ExactDotPerpendicular">
            <summary>
            The exact absolute dot product of perpendicular angled vectors.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.GeometryTolerance.ExactDotStraight">
            <summary>
            The exact absolute dot product of straight angled vectors.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.GeometryTolerance.Exact">
            <summary>
            Gets the <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> which performs exact comparison.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.GeometryTolerance.Model">
            <summary>
            Gets the default <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> for comparing modelling geometry.
            The tolerances are set on 0.001mm for distances and on less than 1° for angles.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.GeometryTolerance.angleTolerance">
            <summary>
            The tolerance for angles.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.GeometryTolerance.distanceTolerance">
            <summary>
            The tolerance for distances and lengths.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.GeometryTolerance.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> struct.
            </summary>
            <param name="angle">The tolerance to apply on angle comparisons.</param>
            <param name="distance">The tolerance to apply on distance and length comparisons.</param>
        </member>
        <member name="M:Tekla.BIM.Geometry.GeometryTolerance.Tolerable(System.Double,System.Double,System.Double)">
            <summary>
            Determines whether the <paramref name="actual"/> value is tolerable to the <paramref name="expectedExact"/> value,
            within the given <paramref name="tolerance"/>.
            </summary>
            <param name="actual">The actual value to determine for whether or not it's tolerable.</param>
            <param name="expectedExact">The exact expected value.</param>
            <param name="tolerance">The tolerance towards the expected value.</param>
            <returns>True if <paramref name="actual"/> is tolerable against <paramref name="expectedExact"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.GeometryTolerance.TolerableAngle(Tekla.Common.Geometry.Angle,Tekla.Common.Geometry.Angle)">
            <summary>
            Compares the equality of two angles against each other according to the <see cref="P:Tekla.BIM.Geometry.GeometryTolerance.Angle"/> value.
            </summary>
            <param name="actual">The actual angle.</param>
            <param name="expected">The expected angle.</param>
            <returns>True if <paramref name="actual"/> is tolerable when compared to <paramref name="expected"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.GeometryTolerance.TolerableAngle(System.Double,System.Double)">
            <summary>
            Compares the equality of two angles against each other according to the <see cref="P:Tekla.BIM.Geometry.GeometryTolerance.Angle"/> value.
            </summary>
            <param name="actual">The actual angle.</param>
            <param name="expected">The expected angle.</param>
            <returns>True if <paramref name="actual"/> is tolerable when compared to <paramref name="expected"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.GeometryTolerance.TolerableDistance(System.Double,System.Double)">
            <summary>
            Compares the equality of two distances against each other according to the <see cref="P:Tekla.BIM.Geometry.GeometryTolerance.Distance"/> value.
            </summary>
            <param name="actual">The actual distance.</param>
            <param name="expected">The expected distance.</param>
            <returns>True if <paramref name="actual"/> is tolerable when compared to <paramref name="expected"/>; otherwise, false.</returns>
        </member>
        <member name="P:Tekla.BIM.Geometry.GeometryTolerance.Angle">
            <summary>
            Gets the tolerance for angles.
            </summary>
        </member>
        <member name="P:Tekla.BIM.Geometry.GeometryTolerance.Distance">
            <summary>
            Gets the tolerance for distances and lengths.
            </summary>
        </member>
        <member name="T:Tekla.BIM.Geometry.GeometryToleranceExtensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.GeometryToleranceExtensions"/> class provides a set of extension methods easing the usage of <see cref="T:System.Nullable`1"/> <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> values.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.GeometryToleranceExtensions.ThisOrDefault(System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Returns the <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> if <paramref name="tolerance"/> is not null; otherwise, <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/> is returned.
            </summary>
            <param name="tolerance">The <see cref="T:System.Nullable`1"/> to get a <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> for.</param>
            <returns>The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> if <paramref name="tolerance"/> is not null; otherwise, <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.GeometryToleranceExtensions.TolerableAngle(System.Nullable{Tekla.BIM.Geometry.GeometryTolerance},Tekla.Common.Geometry.Angle,Tekla.Common.Geometry.Angle)">
            <summary>
            Calls <see cref="M:Tekla.BIM.Geometry.GeometryToleranceExtensions.ThisOrDefault(System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})"/> on <paramref name="tolerance"/> and forwards the call to the <see cref="M:Tekla.BIM.Geometry.GeometryTolerance.TolerableAngle(Tekla.Common.Geometry.Angle,Tekla.Common.Geometry.Angle)"/> method.
            </summary>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> value.</param>
            <param name="actual">The actual angle.</param>
            <param name="expected">The expected angle.</param>
            <returns>True if <paramref name="actual"/> is tolerable when compared to <paramref name="expected"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.GeometryToleranceExtensions.TolerableAngle(System.Nullable{Tekla.BIM.Geometry.GeometryTolerance},System.Double,System.Double)">
            <summary>
            Calls <see cref="M:Tekla.BIM.Geometry.GeometryToleranceExtensions.ThisOrDefault(System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})"/> on <paramref name="tolerance"/> and forwards the call to the <see cref="M:Tekla.BIM.Geometry.GeometryTolerance.TolerableAngle(System.Double,System.Double)"/> method.
            </summary>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> value.</param>
            <param name="actual">The actual angle.</param>
            <param name="expected">The expected angle.</param>
            <returns>True if <paramref name="actual"/> is tolerable when compared to <paramref name="expected"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.GeometryToleranceExtensions.TolerableDistance(System.Nullable{Tekla.BIM.Geometry.GeometryTolerance},System.Double,System.Double)">
            <summary>
            Calls <see cref="M:Tekla.BIM.Geometry.GeometryToleranceExtensions.ThisOrDefault(System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})"/> on <paramref name="tolerance"/> and forwards the call to the <see cref="M:Tekla.BIM.Geometry.GeometryTolerance.TolerableDistance(System.Double,System.Double)"/> method.
            </summary>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> value.</param>
            <param name="actual">The actual distance.</param>
            <param name="expected">The expected distance.</param>
            <returns>True if <paramref name="actual"/> is tolerable when compared to <paramref name="expected"/>; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.IntersectionFace3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.IntersectionFace3"/> class provides a set of extension methods for intersection calculus between <see cref="T:Tekla.BIM.Geometry.Face3"/> an <see cref="N:Tekla.Common.Geometry"/> primitives.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.IntersectionFace3.IntersectionWith(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Segment3)">
            <summary>
            Gets the intersection of the <see cref="T:Tekla.BIM.Geometry.Face3"/> and the <paramref name="segment"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <returns>The intersection point as a <see cref="T:Tekla.Common.Geometry.Vector3"/>; or null, if the values do not intersect.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.IntersectionFace3.IntersectionWith(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Ray3)">
            <summary>
            Gets the intersection of the <see cref="T:Tekla.BIM.Geometry.Face3"/> and the <paramref name="ray"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to use.</param>
            <param name="ray">The <see cref="T:Tekla.Common.Geometry.Ray3"/> to use.</param>
            <returns>The intersection point as a <see cref="T:Tekla.Common.Geometry.Vector3"/>; or null, if the values do not intersect.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.IntersectionFace3.IntersectionWith(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Line3)">
            <summary>
            Gets the intersection of the <see cref="T:Tekla.BIM.Geometry.Face3"/> and the <paramref name="line"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <returns>The intersection point as a <see cref="T:Tekla.Common.Geometry.Vector3"/>; or null, if the values do not intersect.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.IntersectionFace3.Intersects(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Segment3)">
            <summary>
            Gets a value indicating whether the <see cref="T:Tekla.BIM.Geometry.Face3"/> and <paramref name="segment"/> intersect.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <returns>True if <paramref name="face"/> and <paramref name="segment"/> intersect; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.IntersectionFace3.Intersects(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Ray3)">
            <summary>
            Gets a value indicating whether the <see cref="T:Tekla.BIM.Geometry.Face3"/> and <paramref name="ray"/> intersect.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/> to use.</param>
            <param name="ray">The <see cref="T:Tekla.Common.Geometry.Ray3"/> to use.</param>
            <returns>True if <paramref name="face"/> and <paramref name="ray"/> intersect; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.IntersectionFace3.Intersects(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Line3)">
            <summary>
            Gets a value indicating whether the <see cref="T:Tekla.BIM.Geometry.Face3"/> and <paramref name="line"/> intersect.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <returns>True if <paramref name="face"/> and <paramref name="line"/> intersect; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.IntersectionFace3.IntersectionWith``1(Tekla.BIM.Geometry.Face3,``0,System.Func{Tekla.Common.Geometry.Plane3,``0,System.Nullable{Tekla.Common.Geometry.Vector3}})">
            <summary>
            Gets the intersection of the <see cref="T:Tekla.BIM.Geometry.Face3"/> and the given <paramref name="value"/>.
            </summary>
            <typeparam name="TPrimitive">The type of geometric primitive to get the intersection with.</typeparam>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="value">The <typeparamref name="TPrimitive"/> value.</param>
            <param name="getPlaneIntersectionWith">A method calculating the intersection between <paramref name="value"/> and the <see cref="T:Tekla.Common.Geometry.Plane3"/> of <paramref name="face"/>.</param>
            <returns>The intersection point as a <see cref="T:Tekla.Common.Geometry.Vector3"/>; or null, if the values do not intersect.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.Line3Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Line3Extensions"/> class provides a set of static methods for manipulating values of type <see cref="T:Tekla.Common.Geometry.Line3"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Line3Extensions.IntersectionWith(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Line3)">
            <summary>
            Calculates the intersection between two <see cref="T:Tekla.Common.Geometry.Line3"/> values.
            </summary>
            <param name="line">The first <see cref="T:Tekla.Common.Geometry.Line3"/> value.</param>
            <param name="other">The second <see cref="T:Tekla.Common.Geometry.Line3"/> value.</param>
            <returns>The intersection point if both lines intersect; otherwise, null.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Line3Extensions.MoveTo(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Moves a <see cref="T:Tekla.Common.Geometry.Line3"/>'s origin to a given <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> to move.</param>
            <param name="newOrigin">The line's new origin value.</param>
            <returns>The moved <see cref="T:Tekla.Common.Geometry.Line3"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Line3Extensions.Translate(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.UnitVector3,System.Double)">
            <summary>
            Translates a <see cref="T:Tekla.Common.Geometry.Line3"/> into a given <paramref name="direction"/> according to the specified <paramref name="scalar"/>.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> to translate.</param>
            <param name="direction">The direction to perform the translation in.</param> 
            <param name="scalar">The scalar of the translation.</param> 
            <returns>The translated <see cref="T:Tekla.Common.Geometry.Line3"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Line3Extensions.Translate(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Translates a <see cref="T:Tekla.Common.Geometry.Line3"/> along a given <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> to translate.</param>
            <param name="translationVector">The translation <see cref="T:Tekla.Common.Geometry.Vector3"/>.</param>
            <returns>The translated <see cref="T:Tekla.Common.Geometry.Line3"/>.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.Matrix4Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Matrix4Extensions"/> class provides a set of extension methods for the <see cref="T:Tekla.Common.Geometry.Matrix4"/> type.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Matrix4Extensions.Transform(Tekla.Common.Geometry.Matrix4,Tekla.Common.Geometry.Vector3)">
            <summary>
            Transforms the given <see cref="T:Tekla.Common.Geometry.Vector3"/> value by multiplying <paramref name="vector"/> with <paramref name="matrix"/>.
            </summary>
            <param name="matrix">The transformation <see cref="T:Tekla.Common.Geometry.Matrix4"/>.</param>
            <param name="vector">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to get the transformed value for.</param>
            <returns>The transformed <see cref="T:Tekla.Common.Geometry.Vector3"/> value.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.ParallelFace3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.ParallelFace3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.BIM.Geometry.Face3"/> is parallel to another geometric primitive.
            Parallel lines are two lines in a plane that do not intersect or meet.
            The tolerance on this requirement is customizable through a <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> instance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelFace3.ParallelTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.UnitVector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is parallel to <paramref name="face"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelFace3.ParallelTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Line3"/> is parallel to <paramref name="face"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelFace3.ParallelTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Segment3"/> is parallel to <paramref name="face"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelFace3.ParallelTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Plane3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Plane3"/> is parallel to the <paramref name="face"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelFace3.ParallelTo(Tekla.BIM.Geometry.Face3,Tekla.BIM.Geometry.Face3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> values are parallel to each other.
            </summary>
            <param name="face">The first <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="otherFace">The second <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.ParallelLine3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.ParallelLine3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.Common.Geometry.Line3"/> is parallel to another geometric primitive.
            Parallel lines are two lines on a single plane that do not intersect or meet.
            The tolerance on this requirement is customizable through a <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> instance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelLine3.ParallelTo(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.UnitVector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is parallel to the <paramref name="line"/>.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelLine3.ParallelTo(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Line3"/> values are parallel to each other.
            </summary>
            <param name="line">The first <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="otherLine">The second <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelLine3.ParallelTo(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Segment3"/> is parallel to <paramref name="line"/>.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelLine3.ParallelTo(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Plane3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Plane3"/> is parallel to the <paramref name="line"/>.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelLine3.ParallelTo(Tekla.Common.Geometry.Line3,Tekla.BIM.Geometry.Face3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> is parallel to the <paramref name="line"/>.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.ParallelPlane3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.ParallelPlane3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.Common.Geometry.Plane3"/> is parallel to another geometric primitive.
            Parallel lines are two lines in a plane that do not intersect or meet.
            The tolerance on this requirement is customizable through a <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> instance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelPlane3.ParallelTo(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.UnitVector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is parallel to <paramref name="plane"/>.
            </summary>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelPlane3.ParallelTo(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Line3"/> is parallel to <paramref name="plane"/>.
            </summary>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelPlane3.ParallelTo(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Segment3"/> is parallel to <paramref name="plane"/>.
            </summary>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelPlane3.ParallelTo(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Plane3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Plane3"/> values are parallel to each other.
            </summary>
            <param name="plane">The first <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="otherPlane">The second <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelPlane3.ParallelTo(Tekla.Common.Geometry.Plane3,Tekla.BIM.Geometry.Face3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> is parallel to <paramref name="plane"/>.
            </summary>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="otherFace">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.ParallelSegment3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.ParallelSegment3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.Common.Geometry.Segment3"/> is parallel to another geometric primitive.
            Parallel lines are two lines in a plane that do not intersect or meet.
            The tolerance on this requirement is customizable through a <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> instance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelSegment3.ParallelTo(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.UnitVector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is parallel to the <paramref name="segment"/>.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelSegment3.ParallelTo(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Line3"/> value is parallel to <paramref name="segment"/>.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="otherLine">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelSegment3.ParallelTo(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Segment3"/> values are parallel.
            </summary>
            <param name="segment">The first <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="otherSegment">The second <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelSegment3.ParallelTo(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Plane3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Plane3"/> is parallel to the <paramref name="segment"/>.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelSegment3.ParallelTo(Tekla.Common.Geometry.Segment3,Tekla.BIM.Geometry.Face3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> is parallel to the <paramref name="segment"/>.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.ParallelUnitVector3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.ParallelUnitVector3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is parallel to another geometric primitive.
            Parallel lines are two lines in a plane that do not intersect or meet.
            The tolerance on this requirement is customizable through a <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> instance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelUnitVector3.ParallelTo(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> values are equivalent or the equivalent reverse of each other.
            </summary>
            <param name="direction">The first <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="otherDirection">The second <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelUnitVector3.ParallelTo(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.Plane3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> and the given <see cref="T:Tekla.Common.Geometry.Plane3"/> are parallel to each other.
            The two values are parallel if any line pointing into the given <paramref name="direction"/> does not intersect the <paramref name="plane"/>.
            </summary>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelUnitVector3.ParallelTo(Tekla.Common.Geometry.UnitVector3,Tekla.BIM.Geometry.Face3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> and the given <see cref="T:Tekla.BIM.Geometry.Face3"/> are parallel to each other.
            The two values are parallel if any line pointing into the given <paramref name="direction"/> does not intersect the plane of <paramref name="face"/>.
            </summary>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelUnitVector3.ParallelTo(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> and the given <see cref="T:Tekla.Common.Geometry.Line3"/> are parallel to each other.
            Two directions are parallel when they are on the same plane and do not intersect or meet on that plane.
            </summary>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.ParallelUnitVector3.ParallelTo(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> and the given <see cref="T:Tekla.Common.Geometry.Segment3"/> are parallel to each other.
            Two directions are parallel when they are on the same plane and do not intersect or meet on that plane.
            </summary>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as parallel; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.PerpendicularFace3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.PerpendicularFace3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.BIM.Geometry.Face3"/> is perpendicular to another geometric primitive.
            Perpendicular directions are two directions that form congruent adjacent angles (a T-shape).
            The tolerance on this requirement is customizable through a <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> instance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularFace3.PerpendicularTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.UnitVector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is perpendicular to <paramref name="face"/>.
            The two values are considered perpendicular if <paramref name="direction"/> is parallel to the <see cref="P:Tekla.BIM.Geometry.Face3.Normal"/>.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularFace3.PerpendicularTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Line3"/> is perpendicular to <paramref name="face"/>.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularFace3.PerpendicularTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Segment3"/> is perpendicular to <paramref name="face"/>.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularFace3.PerpendicularTo(Tekla.BIM.Geometry.Face3,Tekla.Common.Geometry.Plane3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Plane3"/> is perpendicular to the <paramref name="face"/>.
            Two planes are considered perpendicular (or orthogonal) to each other if their normals form congruent adjacent angles.
            </summary>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularFace3.PerpendicularTo(Tekla.BIM.Geometry.Face3,Tekla.BIM.Geometry.Face3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> values are perpendicular to each other.
            Two planes are considered perpendicular (or orthogonal) to each other if their normals form congruent adjacent angles.
            </summary>
            <param name="face">The first <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="otherFace">The second <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.PerpendicularLine3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.PerpendicularLine3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.Common.Geometry.Line3"/> is perpendicular to another geometric primitive.
            Perpendicular directions are two directions that form congruent adjacent angles (a T-shape).
            The tolerance on this requirement is customizable through a <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> instance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularLine3.PerpendicularTo(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.UnitVector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is perpendicular to the <paramref name="line"/>.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularLine3.PerpendicularTo(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Line3"/> values are perpendicular to each other.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="line">The first <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="otherLine">The second <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularLine3.PerpendicularTo(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Segment3"/> is perpendicular to <paramref name="line"/>.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularLine3.PerpendicularTo(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Plane3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Plane3"/> is perpendicular to the <paramref name="line"/>.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularLine3.PerpendicularTo(Tekla.Common.Geometry.Line3,Tekla.BIM.Geometry.Face3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> is perpendicular to the <paramref name="line"/>.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.PerpendicularPlane3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.PerpendicularPlane3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.Common.Geometry.Plane3"/> is perpendicular to another geometric primitive.
            Perpendicular directions are two directions that form congruent adjacent angles (a T-shape).
            The tolerance on this requirement is customizable through a <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> instance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularPlane3.PerpendicularTo(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.UnitVector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is perpendicular to the <paramref name="plane"/>.
            The two values are considered perpendicular if <paramref name="direction"/> is parallel to the <see cref="P:Tekla.Common.Geometry.Plane3.Normal"/>.
            </summary>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularPlane3.PerpendicularTo(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Line3"/> is perpendicular to <paramref name="plane"/>.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularPlane3.PerpendicularTo(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Segment3"/> is perpendicular to <paramref name="plane"/>.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularPlane3.PerpendicularTo(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Plane3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Plane3"/> values are perpendicular to each other.
            Two planes are considered perpendicular (or orthogonal) to each other if their normals form congruent adjacent angles.
            </summary>
            <param name="plane">The first <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="otherPlane">The second <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularPlane3.PerpendicularTo(Tekla.Common.Geometry.Plane3,Tekla.BIM.Geometry.Face3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> is perpendicular to <paramref name="plane"/>.
            Two planes are considered perpendicular (or orthogonal) to each other if their normals form congruent adjacent angles.
            </summary>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.PerpendicularSegment3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.PerpendicularSegment3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.Common.Geometry.Segment3"/> is perpendicular to another geometric primitive.
            Perpendicular directions are two directions that form congruent adjacent angles (a T-shape).
            The tolerance on this requirement is customizable through a <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> instance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularSegment3.PerpendicularTo(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.UnitVector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is perpendicular to the <paramref name="segment"/>.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularSegment3.PerpendicularTo(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Line3"/> value is perpendicular to <paramref name="segment"/>.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="otherLine">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularSegment3.PerpendicularTo(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Segment3"/> values are perpendicular.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="segment">The first <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="otherSegment">The second <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularSegment3.PerpendicularTo(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Plane3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.Plane3"/> is perpendicular to the <paramref name="segment"/>.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularSegment3.PerpendicularTo(Tekla.Common.Geometry.Segment3,Tekla.BIM.Geometry.Face3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.BIM.Geometry.Face3"/> is perpendicular to the <paramref name="segment"/>.
            Two values are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.PerpendicularUnitVector3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.PerpendicularUnitVector3"/> class provides a set of extension methods for determining whether a <see cref="T:Tekla.Common.Geometry.UnitVector3"/> is perpendicular to another geometric primitive.
            Perpendicular directions are two directions that form congruent adjacent angles (a T-shape).
            The tolerance on this requirement is customizable through a <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> instance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularUnitVector3.PerpendicularTo(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> values are perpendicular to each other on any plane.
            Two directions are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="direction">The first <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="otherDirection">The second <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularUnitVector3.PerpendicularTo(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.Plane3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> and the given <see cref="T:Tekla.Common.Geometry.Plane3"/> are perpendicular to each other.
            The two values are considered perpendicular if the <paramref name="direction"/> is parallel to the <see cref="P:Tekla.Common.Geometry.Plane3.Normal"/>.
            </summary>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularUnitVector3.PerpendicularTo(Tekla.Common.Geometry.UnitVector3,Tekla.BIM.Geometry.Face3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> and the given <see cref="T:Tekla.BIM.Geometry.Face3"/> are perpendicular to each other.
            The two values are considered perpendicular if the <paramref name="direction"/> is parallel to the <see cref="P:Tekla.BIM.Geometry.Face3.Normal"/>.
            </summary>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="face">The <see cref="T:Tekla.BIM.Geometry.Face3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularUnitVector3.PerpendicularTo(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> and the given <see cref="T:Tekla.Common.Geometry.Line3"/> are perpendicular to each other.
            Two directions are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PerpendicularUnitVector3.PerpendicularTo(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> and the given <see cref="T:Tekla.Common.Geometry.Segment3"/> are perpendicular to each other.
            Two directions are considered perpendicular (or orthogonal) to each other if they form congruent adjacent angles.
            </summary>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the values are considered as perpendicular; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.Plane3Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Plane3Extensions"/> class provides a query method for the <see cref="T:Tekla.Common.Geometry.Plane3"/> class.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Plane3Extensions.Clip(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Segment3)">
            <summary>
            Clips <paramref name="segment"/> in order to get a segment
            placed on the positive side of the <paramref name="plane"/>.
            </summary>
            <param name="plane">The plane which intersection is checked with the <paramref name="segment"/>.</param>
            <param name="segment">The segment to check.</param>
            <returns>The clipped segment.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Plane3Extensions.SideClassification(Tekla.Common.Geometry.Plane3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Determins on what side of the plane a given point lies.
            </summary>
            <param name="plane">The plane to classify against.</param>
            <param name="point">The point to classify.</param>
            <returns>
            <see cref="F:Tekla.Common.Geometry.PlaneSideClassification.Intersecting"/> if the point lies on the given plane. 
            <see cref="F:Tekla.Common.Geometry.PlaneSideClassification.Front"/> if the point lies on the side of the plane normal. 
            <see cref="F:Tekla.Common.Geometry.PlaneSideClassification.Back"/> if the point lies on the opposite side of the plane normal. 
            </returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.PlaneWithLine3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.PlaneWithLine3"/> class provides a set of extension methods for calculating <see cref="T:Tekla.Common.Geometry.Plane3"/> values
            defined by a <see cref="T:Tekla.Common.Geometry.Line3"/> and one ore more other geometric primitives.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithLine3.TryGetPlaneWith(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Plane3@,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Gets a value indicating whether a <see cref="T:Tekla.Common.Geometry.Plane3"/> can be defined <paramref name="line"/> and an other <see cref="T:Tekla.Common.Geometry.Line3"/> value.
            </summary>
            <param name="line">The first <see cref="T:Tekla.Common.Geometry.Line3"/> on the plane.</param>
            <param name="otherLine">The other <see cref="T:Tekla.Common.Geometry.Line3"/> on the plane.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="line"/> and <paramref name="otherLine"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply when checking the parameter validity, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if a <see cref="T:Tekla.Common.Geometry.Plane3"/> can be defined by <paramref name="line"/> and <paramref name="otherLine"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithLine3.TryGetPlaneWith(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Plane3@,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Gets a value indicating whether a <see cref="T:Tekla.Common.Geometry.Plane3"/> can be defined <paramref name="line"/> and a given <see cref="T:Tekla.Common.Geometry.Segment3"/> value.
            </summary>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> on the plane.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> on the plane.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="segment"/> and <paramref name="line"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply when checking the parameter validity, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if a <see cref="T:Tekla.Common.Geometry.Plane3"/> can be defined by <paramref name="line"/> and <paramref name="segment"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithLine3.PlaneWith(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="line"/> and a <see cref="T:Tekla.Common.Geometry.Vector3"/> value.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="line"/> contains <paramref name="point"/>.
            </exception>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> on the plane.</param>
            <param name="point">The point on the plane.</param>
            <returns>A new <see cref="T:Tekla.Common.Geometry.Plane3"/> instance.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithLine3.PlaneWith(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Gets the <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="line"/> and an other <see cref="T:Tekla.Common.Geometry.Line3"/> value.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="line"/> and <paramref name="otherLine"/> do not exist on the same plane.
            =OR=
            <paramref name="line"/> and <paramref name="otherLine"/> are collinear.
            </exception>
            <param name="line">The first <see cref="T:Tekla.Common.Geometry.Line3"/> on the plane.</param>
            <param name="otherLine">The other <see cref="T:Tekla.Common.Geometry.Line3"/> on the plane.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply when checking the parameter validity, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>A new <see cref="T:Tekla.Common.Geometry.Plane3"/> instance.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithLine3.PlaneWith(Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Gets the <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="line"/> and a <see cref="T:Tekla.Common.Geometry.Segment3"/> value.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="line"/> and <paramref name="segment"/> do not exist on the same plane.
            =OR=
            <paramref name="line"/> contains <paramref name="segment"/>.
            </exception>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> on the plane.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> on the plane.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply when checking the parameter validity, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>A new <see cref="T:Tekla.Common.Geometry.Plane3"/> instance.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.PlaneWithSegment3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.PlaneWithSegment3"/> class provides a set of extension methods for calculating <see cref="T:Tekla.Common.Geometry.Plane3"/> values
            defined by a <see cref="T:Tekla.Common.Geometry.Segment3"/> and one ore more other geometric primitives.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithSegment3.TryGetPlaneWith(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Plane3@,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Gets a value indicating whether a <see cref="T:Tekla.Common.Geometry.Plane3"/> can be defined <paramref name="segment"/> and an other <see cref="T:Tekla.Common.Geometry.Segment3"/> value.
            </summary>
            <param name="segment">The first <see cref="T:Tekla.Common.Geometry.Segment3"/> on the plane.</param>
            <param name="otherSegment">The other <see cref="T:Tekla.Common.Geometry.Segment3"/> on the plane.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="segment"/> and <paramref name="otherSegment"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply when checking the parameter validity, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if a <see cref="T:Tekla.Common.Geometry.Plane3"/> can be defined by <paramref name="segment"/> and <paramref name="otherSegment"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithSegment3.TryGetPlaneWith(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Plane3@,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Gets a value indicating whether a <see cref="T:Tekla.Common.Geometry.Plane3"/> can be defined <paramref name="segment"/> and a given <see cref="T:Tekla.Common.Geometry.Line3"/> value.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> on the plane.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> on the plane.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="segment"/> and <paramref name="line"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply when checking the parameter validity, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if a <see cref="T:Tekla.Common.Geometry.Plane3"/> can be defined by <paramref name="segment"/> and <paramref name="line"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithSegment3.PlaneWith(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="segment"/> and a <see cref="T:Tekla.Common.Geometry.Vector3"/> value.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="point"/> is collinear with <paramref name="segment"/>.
            </exception>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> on the plane.</param>
            <param name="point">The point on the plane.</param>
            <returns>A new <see cref="T:Tekla.Common.Geometry.Plane3"/> instance.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithSegment3.PlaneWith(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Segment3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Gets the <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="segment"/> and an other <see cref="T:Tekla.Common.Geometry.Segment3"/> value.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="segment"/> and <paramref name="otherSegment"/> do not exist on the same plane.
            =OR=
            <paramref name="segment"/> and <paramref name="otherSegment"/> are collinear.
            </exception>
            <param name="segment">The first <see cref="T:Tekla.Common.Geometry.Segment3"/> on the plane.</param>
            <param name="otherSegment">The other <see cref="T:Tekla.Common.Geometry.Segment3"/> on the plane.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply when checking the parameter validity, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>A new <see cref="T:Tekla.Common.Geometry.Plane3"/> instance.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithSegment3.PlaneWith(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Line3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Gets the <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="segment"/> and a <see cref="T:Tekla.Common.Geometry.Line3"/> value.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="segment"/> and <paramref name="line"/> do not exist on the same plane.
            =OR=
            <paramref name="line"/> contains <paramref name="segment"/>.
            </exception>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> on the plane.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> on the plane.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply when checking the parameter validity, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>A new <see cref="T:Tekla.Common.Geometry.Plane3"/> instance.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.PlaneWithVector3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.PlaneWithVector3"/> class provides a set of extension methods for calculating <see cref="T:Tekla.Common.Geometry.Plane3"/> values
            defined by a <see cref="T:Tekla.Common.Geometry.Vector3"/> and one or more other geometric primitives.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithVector3.TryGetPlaneWith(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Plane3@,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Tries to get a <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by the three given <see cref="T:Tekla.Common.Geometry.Vector3"/> values.
            </summary>
            <param name="point">The third point on the plane.</param>
            <param name="firstPoint">The first point on the plane.</param>
            <param name="otherPoint">The second point on the plane.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by the three given <see cref="T:Tekla.Common.Geometry.Vector3"/> values.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply when checking the parameter validity, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if a <see cref="T:Tekla.Common.Geometry.Plane3"/> can be defined by the three given <see cref="T:Tekla.Common.Geometry.Vector3"/> values; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithVector3.TryGetPlaneWith(Tekla.Common.Geometry.Vector3,System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3},Tekla.Common.Geometry.Plane3@,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Tries to get a <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="point"/> and the given sequence of <see cref="T:Tekla.Common.Geometry.Vector3"/> values.
            </summary>
            <param name="point">The first point on the plane.</param>
            <param name="otherPoints">The other points on the plane.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by the given <see cref="T:Tekla.Common.Geometry.Vector3"/> values.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply when checking the parameter validity, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if a <see cref="T:Tekla.Common.Geometry.Plane3"/> can be defined by the given <see cref="T:Tekla.Common.Geometry.Vector3"/> values; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithVector3.TryGetPlaneWith(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Plane3@,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Tries to get a <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="point"/> and a <see cref="T:Tekla.Common.Geometry.Segment3"/> value.
            </summary>
            <param name="point">The first point on the plane.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> on the plane.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="point"/> and <paramref name="segment"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply when checking the parameter validity, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if a <see cref="T:Tekla.Common.Geometry.Plane3"/> can be defined by <paramref name="point"/> and <paramref name="segment"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithVector3.TryGetPlaneWith(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Line3,Tekla.Common.Geometry.Plane3@,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Tries to get a <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="point"/> and a <see cref="T:Tekla.Common.Geometry.Line3"/> value.
            </summary>
            <param name="point">The first point on the plane.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> on the plane.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="point"/> and <paramref name="line"/>.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply when checking the parameter validity, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if a <see cref="T:Tekla.Common.Geometry.Plane3"/> can be defined by <paramref name="point"/> and <paramref name="line"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithVector3.TryGetPlane(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3},Tekla.Common.Geometry.Plane3@,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Tries to get the <see cref="T:Tekla.Common.Geometry.Plane3"/> that contains all given <paramref name="points"/>.
            It is asserted that only one such plane exists.
            </summary>
            <param name="points">The points to get a containing <see cref="T:Tekla.Common.Geometry.Plane3"/> for.</param>
            <param name="plane">The <see cref="T:Tekla.Common.Geometry.Plane3"/> containing all <paramref name="points"/></param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply when checking the parameter validity.</param>
            <returns>True if a single <see cref="T:Tekla.Common.Geometry.Plane3"/> can be defined that contains all <paramref name="points"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithVector3.PlaneWith(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by the three given <see cref="T:Tekla.Common.Geometry.Vector3"/> values.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown when one or more <see cref="T:Tekla.Common.Geometry.Vector3"/> values are equal.
            =OR=
            Thrown when the three <see cref="T:Tekla.Common.Geometry.Vector3"/> values are collinear.
            </exception>
            <param name="point">The third point on the plane.</param>
            <param name="firstPoint">The first point on the plane.</param>
            <param name="otherPoint">The second point on the plane.</param>
            <returns>A new <see cref="T:Tekla.Common.Geometry.Plane3"/> instance.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithVector3.PlaneWith(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Segment3)">
            <summary>
            Gets the <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="point"/> and a <see cref="T:Tekla.Common.Geometry.Segment3"/> value.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown when <paramref name="point"/> is collinear with <paramref name="segment"/>.
            </exception>
            <param name="point">The first point on the plane.</param>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> on the plane.</param>
            <returns>A new <see cref="T:Tekla.Common.Geometry.Plane3"/> instance.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithVector3.PlaneWith(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Line3)">
            <summary>
            Gets the <see cref="T:Tekla.Common.Geometry.Plane3"/> defined by <paramref name="point"/> and a <see cref="T:Tekla.Common.Geometry.Line3"/> value.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown when <paramref name="line"/> contains <paramref name="point"/>.
            </exception>
            <param name="point">The first point on the plane.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> on the plane.</param>
            <returns>A new <see cref="T:Tekla.Common.Geometry.Plane3"/> instance.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithVector3.TryGetPlaneNormalByNewellMethod(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3},Tekla.Common.Geometry.UnitVector3@)">
            <summary>
            Tries to find the normal of the surface defined by <paramref name="points"/>, using the Newell's method.
            </summary>
            <remarks>
            The pseudo code for this implementation can be found at http://www.opengl.org/wiki/Calculating_a_Surface_Normal
            </remarks>
            <param name="points">The <see cref="T:Tekla.Common.Geometry.Vector3"/> values to calculate a normal from.</param>
            <param name="normal">The normal defined by <paramref name="points"/>.</param>
            <returns>True if a normalized <paramref name="normal"/> can be calculated from <paramref name="points"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PlaneWithVector3.TryGetPlaneNormalByCrossProduct(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3},Tekla.Common.Geometry.UnitVector3@)">
            <summary>
            Tries to find the normal of the surface defined by <paramref name="points"/>,
            using a cross product on the first three non-collinear and non-equal points.
            </summary>
            <param name="points">The <see cref="T:Tekla.Common.Geometry.Vector3"/> values to calculate a cross product from.</param>
            <param name="normal">The normal defined by <paramref name="points"/>.</param>
            <returns>True if a normalized <paramref name="normal"/> can be calculated from <paramref name="points"/>; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.PolySegment3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.PolySegment3"/> class is a polyline represented by a collection of <see cref="T:Tekla.Common.Geometry.Segment3"/> values.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.PolySegment3.points">
            <summary>
            The read-only collection of the points defining the line.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.PolySegment3.#ctor(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3})">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.BIM.Geometry.PolySegment3"/> class.
            </summary>
            <param name="points">The points defining the line.</param>
        </member>
        <member name="M:Tekla.BIM.Geometry.PolySegment3.ClosestSegmentTo(Tekla.Common.Geometry.Vector3)">
            <summary>
            Calculates the <see cref="T:Tekla.Common.Geometry.Segment3"/> of that is closest to the point.
            </summary>
            <param name="point">The point to get the closest segment to.</param>
            <returns>The closest segment.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PolySegment3.ClosestSegmentTo(Tekla.Common.Geometry.Vector3,System.Double@)">
            <summary>
            Calculates the <see cref="T:Tekla.Common.Geometry.Segment3"/> of that is closest to the point.
            </summary>
            <param name="point">The point to get the closest segment to.</param>
            <param name="distance">The distance between the point and the returned <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <returns>The closest segment.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PolySegment3.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the segments defining the line.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection of segments.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.PolySegment3.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the segments defining the line.
            </summary>
            <returns>A <see cref="T:System.Collections.IEnumerator"/> that can be used to iterate through the collection of segments.</returns>
        </member>
        <member name="P:Tekla.BIM.Geometry.PolySegment3.Segments">
            <summary>
            Gets the read-only list of segments defining the line.
            </summary>
        </member>
        <member name="P:Tekla.BIM.Geometry.PolySegment3.Points">
            <summary>
            Gets the read-only list of points defining the line.
            </summary>
        </member>
        <member name="T:Tekla.BIM.Geometry.Segment2Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Segment2Extensions"/> class provides a set of static methods for querying objects of type <see cref="T:Tekla.Common.Geometry.Segment2"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Segment2Extensions.AsLine2(Tekla.Common.Geometry.Segment2)">
            <summary>
            Gets a <see cref="T:Tekla.Common.Geometry.Line2"/> constructed from the <see cref="P:Tekla.Common.Geometry.Segment2.Origin"/> and <see cref="P:Tekla.Common.Geometry.Segment2.Direction"/> properties.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment2"/> to get the containing <see cref="T:Tekla.Common.Geometry.Line2"/> for.</param>
            <returns>A <see cref="T:Tekla.Common.Geometry.Line2"/> with the same direction and origin as <paramref name="segment"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Segment2Extensions.Length(Tekla.Common.Geometry.Segment2)">
            <summary>
            Gets the length of <paramref name="segment"/>,
            which is the distance between the <see cref="P:Tekla.Common.Geometry.Segment2.NegativeEnd"/> and <see cref="P:Tekla.Common.Geometry.Segment2.PositiveEnd"/> values.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment2"/> to get the length of.</param>
            <returns>The length of <paramref name="segment"/>.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.Segment3Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Segment3Extensions"/> class provides a set of static methods for querying objects of type <see cref="T:Tekla.Common.Geometry.Segment3"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Segment3Extensions.AsLine3(Tekla.Common.Geometry.Segment3)">
            <summary>
            Gets a <see cref="T:Tekla.Common.Geometry.Line3"/> constructed from the <see cref="P:Tekla.Common.Geometry.Segment3.Origin"/> and <see cref="P:Tekla.Common.Geometry.Segment3.Direction"/> properties.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> to get the containing <see cref="T:Tekla.Common.Geometry.Line3"/> for.</param>
            <returns>A <see cref="T:Tekla.Common.Geometry.Line3"/> with the same direction and origin as <paramref name="segment"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Segment3Extensions.Extend(Tekla.Common.Geometry.Segment3,System.Double)">
            <summary>
            Extends a <see cref="T:Tekla.Common.Geometry.Segment3"/> with the given <paramref name="addedLength"/> value.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> to extend.</param>
            <param name="addedLength">The value to add to the segment's length.</param>
            <returns>The extended <see cref="T:Tekla.Common.Geometry.Segment3"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Segment3Extensions.IntersectionWith(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Segment3,System.Boolean,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Calculates the intersection between two <see cref="T:Tekla.Common.Geometry.Segment3"/> values.
            </summary>
            <param name="segment">
            The first <see cref="T:Tekla.Common.Geometry.Segment3"/> value.
            </param>
            <param name="other">
            The second <see cref="T:Tekla.Common.Geometry.Segment3"/> value.
            </param>
            <param name="includeParallel">
            A value to indicate whether to include also parallel segment intersections.
            </param>
            <param name="tolerance">
            The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply.
            </param>
            <returns>
            The intersection point if both segments intersect; otherwise, null.
            </returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Segment3Extensions.IntersectionPointsWith(Tekla.Common.Geometry.Segment3,System.Collections.Generic.IList{Tekla.Common.Geometry.Segment3},System.Boolean,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Calculates the intersection points between
            <paramref name="segment"/> and <paramref name="otherSegments"/>.
            </summary>
            <param name="segment">
            The first <see cref="T:Tekla.Common.Geometry.Segment3"/> value.
            </param>
            <param name="otherSegments">
            The other segments.
            </param>
            <param name="includeParallel">
            A value to indicate whether to include also parallel segment intersections.
            </param>
            <param name="tolerance">
            The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply.
            </param>
            <returns>
            The intersection points.
            </returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Segment3Extensions.HasIntersections(System.Collections.Generic.IList{Tekla.Common.Geometry.Segment3},System.Boolean,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the given segment collection is self-intersecting.
            </summary>
            <param name="segments">The segments to check.</param>
            <param name="linkedSegments">The value indicating whether the <paramref name="segments"/> are allowed to have their endpoints linked.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the segment collection is self-intersecting.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Segment3Extensions.HasEndPoint(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Vector3,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Checks if the <paramref name="vector"/> is an end point of the <paramref name="segment"/>.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/>.</param>
            <param name="vector">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to be checked.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="vector"/> is one of the segment's end points; Otherwise false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Segment3Extensions.Length(Tekla.Common.Geometry.Segment3)">
            <summary>
            Gets the length of <paramref name="segment"/>,
            which is the distance between the <see cref="P:Tekla.Common.Geometry.Segment3.NegativeEnd"/> and <see cref="P:Tekla.Common.Geometry.Segment3.PositiveEnd"/> values.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> to get the length of.</param>
            <returns>The length of <paramref name="segment"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Segment3Extensions.Project(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Line3)">
            <summary>
            Projects the <paramref name="segment"/> on the given <see cref="T:Tekla.Common.Geometry.Line3"/>.
            The returned segment's endpoints are the closest points on <paramref name="line"/> to the original <paramref name="segment"/> endpoints.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> to project to <paramref name="line"/>.</param>
            <param name="line">The <see cref="T:Tekla.Common.Geometry.Line3"/> to project <paramref name="segment"/> on.</param>
            <returns>A projected <see cref="T:Tekla.Common.Geometry.Segment3"/> value.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Segment3Extensions.Translate(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.UnitVector3,System.Double)">
            <summary>
            Translates a <see cref="T:Tekla.Common.Geometry.Segment3"/> into a given <paramref name="direction"/> according to the specified <paramref name="scalar"/>.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> to translate.</param>
            <param name="direction">The direction to perform the translation in.</param> 
            <param name="scalar">The scalar of the translation.</param> 
            <returns>The translated <see cref="T:Tekla.Common.Geometry.Segment3"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Segment3Extensions.Translate(Tekla.Common.Geometry.Segment3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Translates a <see cref="T:Tekla.Common.Geometry.Segment3"/> along a given <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment3"/> to translate.</param>
            <param name="translationVector">The translation <see cref="T:Tekla.Common.Geometry.Vector3"/>.</param>
            <returns>The translated <see cref="T:Tekla.Common.Geometry.Segment3"/>.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.SequenceEquivalentExtensions3">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.SequenceEquivalentExtensions3"/> class provides a set of extension methods to determine equality
            between sequence of 3D values according to a specified tolerance.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.UnitVector3},System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.UnitVector3})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.Common.Geometry.UnitVector3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.UnitVector3},System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.UnitVector3},System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.Common.Geometry.UnitVector3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3},System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.Common.Geometry.Vector3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3},System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3},System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.Common.Geometry.Vector3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Line3},System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Line3})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.Common.Geometry.Line3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Line3},System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Line3},System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.Common.Geometry.Line3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Segment3},System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Segment3})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.Common.Geometry.Segment3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Segment3},System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Segment3},System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.Common.Geometry.Segment3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Plane3},System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Plane3})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.Common.Geometry.Plane3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Plane3},System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Plane3},System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.Common.Geometry.Plane3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.BIM.Geometry.Face3},System.Collections.Generic.IEnumerable{Tekla.BIM.Geometry.Face3})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.BIM.Geometry.Face3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.BIM.Geometry.Face3},System.Collections.Generic.IEnumerable{Tekla.BIM.Geometry.Face3},System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.BIM.Geometry.Face3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.BIM.Geometry.PolySegment3},System.Collections.Generic.IEnumerable{Tekla.BIM.Geometry.PolySegment3})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.BIM.Geometry.PolySegment3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.BIM.Geometry.PolySegment3},System.Collections.Generic.IEnumerable{Tekla.BIM.Geometry.PolySegment3},System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.BIM.Geometry.PolySegment3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.AxisAlignedBox3},System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.AxisAlignedBox3})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.Common.Geometry.AxisAlignedBox3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.SequenceEquivalentExtensions3.SequenceEquivalent(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.AxisAlignedBox3},System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.AxisAlignedBox3},System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether the specified sequence of <see cref="T:Tekla.Common.Geometry.AxisAlignedBox3"/> values is equivalent to the <paramref name="other"/> sequence.
            </summary>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to <paramref name="other"/>.</param>
            <param name="other">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to compare to the <paramref name="first"/> sequence.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply, or <see cref="F:Tekla.BIM.Geometry.GeometryTolerance.Model"/>.</param>
            <returns>True if the <paramref name="first"/> sequence is equivalent to the <paramref name="other"/> sequence; otherwise, false.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.UnitVector3Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.UnitVector3Extensions"/> class provides a set of static methods for querying values of type <see cref="T:Tekla.Common.Geometry.UnitVector3"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.UnitVector3Extensions.AngleTo(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Gets the absolute <see cref="T:Tekla.Common.Geometry.Angle"/> between the two <see cref="T:Tekla.Common.Geometry.UnitVector3"/> values.
            </summary>
            <param name="first">The first <see cref="T:Tekla.Common.Geometry.UnitVector3"/> value.</param>
            <param name="other">The other <see cref="T:Tekla.Common.Geometry.UnitVector3"/> value.</param>
            <returns>The <see cref="T:Tekla.Common.Geometry.Angle"/> between the two <see cref="T:Tekla.Common.Geometry.UnitVector3"/> values.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.UnitVector3Extensions.AngleTo(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Gets the signed <see cref="T:Tekla.Common.Geometry.Angle"/> between the two <see cref="T:Tekla.Common.Geometry.UnitVector3"/> values.
            </summary>
            <param name="first">The first <see cref="T:Tekla.Common.Geometry.UnitVector3"/> value. Must be perpendicular to <paramref name="normal"/>.</param>
            <param name="other">The other <see cref="T:Tekla.Common.Geometry.UnitVector3"/> value. Must be perpendicular to <paramref name="normal"/>.</param>
            <param name="normal">The normal of the plane containing both vectors.</param>
            <returns>The <see cref="T:Tekla.Common.Geometry.Angle"/> between the two <see cref="T:Tekla.Common.Geometry.UnitVector3"/> values.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.UnitVector3Extensions.GetClosestAxis(Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Gets the closest signed axis-aligned <see cref="T:Tekla.Common.Geometry.UnitVector3"/> for the given <paramref name="direction"/>.
            </summary>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/> to get the closest axis to.</param>
            <returns>The closest axis-aligned <see cref="T:Tekla.Common.Geometry.UnitVector3"/> for the given <paramref name="direction"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.UnitVector3Extensions.GetLocalCoordinateSystem(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets a local <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> for <paramref name="localZ"/>.
            The coordinate system is based on the results of <see cref="M:Tekla.BIM.Geometry.UnitVector3Extensions.GetLocalX(Tekla.Common.Geometry.UnitVector3)"/> and <see cref="M:Tekla.BIM.Geometry.UnitVector3Extensions.GetLocalY(Tekla.Common.Geometry.UnitVector3)"/>.
            </summary>
            <param name="localZ">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/> to get a local coordinate system for.</param>
            <param name="origin">The origin of the coordinate system.</param>
            <returns>A local <see cref="T:Tekla.BIM.Geometry.CoordinateSystem3"/> for <paramref name="localZ"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.UnitVector3Extensions.GetLocalX(Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Gets a <see cref="T:Tekla.Common.Geometry.UnitVector3"/> perpendicular to <paramref name="localZ"/>
            and perpendicular to the result of <see cref="M:Tekla.BIM.Geometry.UnitVector3Extensions.GetLocalY(Tekla.Common.Geometry.UnitVector3)"/> for <paramref name="localZ"/>.
            </summary>
            <param name="localZ">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/> to get a perpendicular vector for.</param>
            <returns>A <see cref="T:Tekla.Common.Geometry.UnitVector3"/> perpendicular to <paramref name="localZ"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.UnitVector3Extensions.GetLocalY(Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Gets a <see cref="T:Tekla.Common.Geometry.UnitVector3"/> perpendicular to <paramref name="localZ"/>
            and perpendicular to the result of <see cref="M:Tekla.BIM.Geometry.UnitVector3Extensions.GetLocalX(Tekla.Common.Geometry.UnitVector3)"/> for <paramref name="localZ"/>.
            </summary>
            <param name="localZ">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/> to get a perpendicular vector for.</param>
            <returns>A <see cref="T:Tekla.Common.Geometry.UnitVector3"/> perpendicular to <paramref name="localZ"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.UnitVector3Extensions.Invert(Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Returns the inverse <see cref="T:Tekla.Common.Geometry.UnitVector3"/> for the given <paramref name="unitVector"/>.
            </summary>
            <param name="unitVector">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/> value to invert.</param>
            <returns>An inverse <see cref="T:Tekla.Common.Geometry.UnitVector3"/> value.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.UnitVector3Extensions.Rotate(Tekla.Common.Geometry.UnitVector3,Tekla.Common.Geometry.Angle,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Rotates the given <see cref="T:Tekla.Common.Geometry.UnitVector3"/> around the given <paramref name="rotationAxis"/>.
            </summary>
            <param name="direction">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/> to rotate.</param>
            <param name="angle">The <see cref="T:Tekla.Common.Geometry.Angle"/> to rotate <paramref name="direction"/> with.</param>
            <param name="rotationAxis">The axis to rotate <paramref name="direction"/> around.</param>
            <returns>The rotated <see cref="T:Tekla.Common.Geometry.UnitVector3"/> value.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.UnitVector3Extensions.AbsoluteComponents(Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Returns a <see cref="T:Tekla.Common.Geometry.UnitVector3"/> with all its components as positive values.
            </summary>
            <param name="unitVector">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/> to get the absolute components for.</param>
            <returns>A <see cref="T:Tekla.Common.Geometry.UnitVector3"/> with all its components as positive values.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.Vector2Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Vector2Extensions"/> class provides a set of static methods for querying objects of type <see cref="T:Tekla.Common.Geometry.Vector2"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector2Extensions.ToLinkedSegmentList(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector2},System.Boolean,System.Boolean,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Returns a list of segments linking all <paramref name="points"/> together.
            </summary>
            <param name="points">The points to create the segments from.</param>
            <param name="asClosedLoop">Indicates whether or not the last point must be connected to the first point.</param>
            <param name="filterDuplicates">A value indicating whether duplicate vertices should be filtered from the result.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply if <paramref name="filterDuplicates"/> is true.</param>
            <returns>The list of segments connecting all <paramref name="points"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector3(Tekla.Common.Geometry.Vector2,System.Double)">
            <summary>
            Gets the given <see cref="T:Tekla.Common.Geometry.Vector2"/> value as a <see cref="T:Tekla.Common.Geometry.Vector3"/> value.
            </summary>
            <param name="vector">The <see cref="T:Tekla.Common.Geometry.Vector2"/> value to get as a <see cref="T:Tekla.Common.Geometry.Vector3"/> value.</param>
            <param name="componentZ">The value to assign to <see cref="P:Tekla.Common.Geometry.Vector3.Z"/>.</param>
            <returns>The given <see cref="T:Tekla.Common.Geometry.Vector2"/> value as a <see cref="T:Tekla.Common.Geometry.Vector3"/> value.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Gets the <paramref name="vector3"/> as a <see cref="T:Tekla.Common.Geometry.Vector2"/> only having the two coordinates accoriding to the smallest coordinates of <paramref name="pointNormal"/>.
            The biggest coordinate of <paramref name="pointNormal"/> is the one that is dropped for the <see cref="T:Tekla.Common.Geometry.Vector2"/> conversion.
            </summary>
            <param name="vector3">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to get a <see cref="T:Tekla.Common.Geometry.Vector2"/> for.</param>
            <param name="pointNormal">The <see cref="T:Tekla.Common.Geometry.UnitVector3"/> indicating which coordinate needs to be dropped.</param>
            <returns>A <see cref="T:Tekla.Common.Geometry.Vector2"/> with the <see cref="P:Tekla.Common.Geometry.Vector3.X"/> and <see cref="P:Tekla.Common.Geometry.Vector3.Y"/> values of <paramref name="vector3"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2XY(Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the <paramref name="vector3"/> as a <see cref="T:Tekla.Common.Geometry.Vector2"/> only having the <see cref="P:Tekla.Common.Geometry.Vector3.X"/> and <see cref="P:Tekla.Common.Geometry.Vector3.Y"/> values.
            </summary>
            <param name="vector3">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to get a <see cref="T:Tekla.Common.Geometry.Vector2"/> for.</param>
            <returns>A <see cref="T:Tekla.Common.Geometry.Vector2"/> with the <see cref="P:Tekla.Common.Geometry.Vector3.X"/> and <see cref="P:Tekla.Common.Geometry.Vector3.Y"/> values of <paramref name="vector3"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2XZ(Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the <paramref name="vector3"/> as a <see cref="T:Tekla.Common.Geometry.Vector2"/> only having the <see cref="P:Tekla.Common.Geometry.Vector3.X"/> and <see cref="P:Tekla.Common.Geometry.Vector3.Z"/> values.
            </summary>
            <param name="vector3">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to get a <see cref="T:Tekla.Common.Geometry.Vector2"/> for.</param>
            <returns>A <see cref="T:Tekla.Common.Geometry.Vector2"/> with the <see cref="P:Tekla.Common.Geometry.Vector3.X"/> and <see cref="P:Tekla.Common.Geometry.Vector3.Z"/> values of <paramref name="vector3"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2YZ(Tekla.Common.Geometry.Vector3)">
            <summary>
            Gets the <paramref name="vector3"/> as a <see cref="T:Tekla.Common.Geometry.Vector2"/> only having the <see cref="P:Tekla.Common.Geometry.Vector3.Y"/> and <see cref="P:Tekla.Common.Geometry.Vector3.Z"/> values.
            </summary>
            <param name="vector3">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to get a <see cref="T:Tekla.Common.Geometry.Vector2"/> for.</param>
            <returns>A <see cref="T:Tekla.Common.Geometry.Vector2"/> with the <see cref="P:Tekla.Common.Geometry.Vector3.Y"/> and <see cref="P:Tekla.Common.Geometry.Vector3.Z"/> values of <paramref name="vector3"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector2Extensions.GetVector3ToVector2Convertor(Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Depending on the value of <paramref name="normal"/>, returns either <see cref="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2XY(Tekla.Common.Geometry.Vector3)"/>, <see cref="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2XZ(Tekla.Common.Geometry.Vector3)"/>, or <see cref="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2YZ(Tekla.Common.Geometry.Vector3)"/>.
            The biggest coordinate of <paramref name="normal"/> is the one that is dropped for the <see cref="T:Tekla.Common.Geometry.Vector2"/> conversion, since it holds the least significance.
            </summary>
            <param name="normal">The normal of the plane(s) holding the points to convert.</param>
            <returns>Either <see cref="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2XY(Tekla.Common.Geometry.Vector3)"/>, <see cref="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2XZ(Tekla.Common.Geometry.Vector3)"/>, or <see cref="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2YZ(Tekla.Common.Geometry.Vector3)"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector2Extensions.GetVector3ToVector2Convertor(Tekla.Common.Geometry.UnitVector3,System.Func{Tekla.Common.Geometry.Vector3,System.Double}@)">
            <summary>
            Depending on the value of <paramref name="normal"/>, returns either <see cref="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2XY(Tekla.Common.Geometry.Vector3)"/>, <see cref="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2XZ(Tekla.Common.Geometry.Vector3)"/>, or <see cref="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2YZ(Tekla.Common.Geometry.Vector3)"/>.
            The biggest coordinate of <paramref name="normal"/> is the one that is dropped for the <see cref="T:Tekla.Common.Geometry.Vector2"/> conversion, since it holds the least significance.
            </summary>
            <param name="normal">The normal of the plane(s) holding the points to convert.</param>
            <param name="getIgnoredComponent">A method returning the value of the component ignored by the returned convertor for a given <see cref="T:Tekla.Common.Geometry.Vector3"/> value.</param>
            <returns>Either <see cref="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2XY(Tekla.Common.Geometry.Vector3)"/>, <see cref="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2XZ(Tekla.Common.Geometry.Vector3)"/>, or <see cref="M:Tekla.BIM.Geometry.Vector2Extensions.ToVector2YZ(Tekla.Common.Geometry.Vector3)"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector2Extensions.InsidePolygon(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector2},Tekla.Common.Geometry.Vector2)">
            <summary>
            Gets a value indicating whether a given <see cref="T:Tekla.Common.Geometry.Vector2"/> value is geometrically inside the 2D structure
            defined by a sequence of <see cref="T:Tekla.Common.Geometry.Vector2"/> values.
            </summary>
            <remarks>
            It is not asserted whether <paramref name="polygon"/> contains three or more elements. If the array contains less elements, false is returned.
            If <paramref name="point"/> equals a corner or exists on an edge of <paramref name="polygon"/>, false is returned.
            </remarks>
            <param name="polygon">The array of <see cref="T:Tekla.Common.Geometry.Vector2"/> values defining the polygon.</param>
            <param name="point">The <see cref="T:Tekla.Common.Geometry.Vector2"/> to determine for whether it is contained inside <paramref name="polygon"/>.</param>
            <returns>True if the <paramref name="point"/> is inside <paramref name="polygon"/>; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector2Extensions.ProjectByAxisX(Tekla.Common.Geometry.Segment2,Tekla.Common.Geometry.Vector2,Tekla.Common.Geometry.Vector2@)">
            <summary>
            Projects the given <see cref="T:Tekla.Common.Geometry.Vector2"/> onto <paramref name="segment"/> along the X-axis.
            </summary>
            <param name="segment">The <see cref="T:Tekla.Common.Geometry.Segment2"/> to project <paramref name="point"/> on.</param>
            <param name="point">The <see cref="T:Tekla.Common.Geometry.Vector2"/> to project.</param>
            <param name="projectionPoint">The projected point, if any.</param>
            <returns>The <see cref="T:Tekla.BIM.Geometry.Vector2Extensions.ProjectionResult"/> describing how <paramref name="point"/> was projected on <paramref name="segment"/>.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.Vector2Extensions.ProjectionResult">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Vector2Extensions.ProjectionResult"/> enum describes how a projection is made..
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.Vector2Extensions.ProjectionResult.Projected">
            <summary>
            The result is a valid projection.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.Vector2Extensions.ProjectionResult.Collinear">
            <summary>
            The projection line is collinear with the target segment.
            </summary>
        </member>
        <member name="F:Tekla.BIM.Geometry.Vector2Extensions.ProjectionResult.Invalid">
            <summary>
            The projection could not be made.
            </summary>
        </member>
        <member name="T:Tekla.BIM.Geometry.Vector3Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Vector3Extensions"/> class provides a set of static methods for querying values of type <see cref="T:Tekla.Common.Geometry.Vector3"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector3Extensions.ToLinkedSegmentList(System.Collections.Generic.IEnumerable{Tekla.Common.Geometry.Vector3},System.Boolean,System.Boolean,System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Returns a list of segments linking all <paramref name="points"/> together.
            </summary>
            <param name="points">The points to create the segments from.</param>
            <param name="asClosedLoop">Indicates whether or not the last point must be connected to the first point.</param>
            <param name="filterDuplicates">A value indicating whether duplicate vertices should be filtered from the result.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply if <paramref name="filterDuplicates"/> is true.</param>
            <returns>The list of segments connecting all <paramref name="points"/>.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector3Extensions.HasDuplicates(System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3},System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Determines whether a set of points contains duplicates.
            </summary>
            <param name="points">The points to be checked.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply.</param>
            <returns>True if duplicates are found, otherwise false.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector3Extensions.RemoveDuplicates(System.Collections.Generic.IList{Tekla.Common.Geometry.Vector3},System.Nullable{Tekla.BIM.Geometry.GeometryTolerance})">
            <summary>
            Removes duplicate from a set of points. 
            </summary>
            <param name="points">The list of points to remove duplicates from.</param>
            <param name="tolerance">The <see cref="T:Tekla.BIM.Geometry.GeometryTolerance"/> to apply.</param>
            <returns>The number of duplicates removed.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector3Extensions.Rotate(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Angle,Tekla.Common.Geometry.UnitVector3)">
            <summary>
            Rotates the given <see cref="T:Tekla.Common.Geometry.Vector3"/> around the given <paramref name="rotationAxis"/>.
            </summary>
            <param name="vector">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to rotate.</param>
            <param name="angle">The <see cref="T:Tekla.Common.Geometry.Angle"/> to rotate <paramref name="vector"/> with.</param>
            <param name="rotationAxis">The axis to rotate <paramref name="vector"/> around.</param>
            <returns>The rotated <see cref="T:Tekla.Common.Geometry.Vector3"/> value.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector3Extensions.Rotate(Tekla.Common.Geometry.Vector3,Tekla.Common.Geometry.Angle,Tekla.Common.Geometry.Line3)">
            <summary>
            Rotates the given <see cref="T:Tekla.Common.Geometry.Vector3"/> around the given <paramref name="rotationAxis"/>.
            </summary>
            <param name="vector">The <see cref="T:Tekla.Common.Geometry.Vector3"/> to rotate.</param>
            <param name="angle">The <see cref="T:Tekla.Common.Geometry.Angle"/> to rotate <paramref name="vector"/> with.</param>
            <param name="rotationAxis">The axis to rotate <paramref name="vector"/> around.</param>
            <returns>The rotated <see cref="T:Tekla.Common.Geometry.Vector3"/> value.</returns>
        </member>
        <member name="T:Tekla.BIM.Geometry.Vector4Extensions">
            <summary>
            The <see cref="T:Tekla.BIM.Geometry.Vector4Extensions"/> class provides a set of static methods for querying objects of type <see cref="T:Tekla.Common.Geometry.Vector4"/>.
            </summary>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector4Extensions.ToVector3(Tekla.Common.Geometry.Vector4)">
            <summary>
            Gets the given <see cref="T:Tekla.Common.Geometry.Vector4"/> value as a <see cref="T:Tekla.Common.Geometry.Vector3"/> value by dropping the <see cref="P:Tekla.Common.Geometry.Vector4.W"/> component.
            </summary>
            <param name="vector">The <see cref="T:Tekla.Common.Geometry.Vector4"/> value to get as a <see cref="T:Tekla.Common.Geometry.Vector3"/> value.</param>
            <returns>The given <see cref="T:Tekla.Common.Geometry.Vector4"/> value as a <see cref="T:Tekla.Common.Geometry.Vector3"/> value.</returns>
        </member>
        <member name="M:Tekla.BIM.Geometry.Vector4Extensions.ToVector4(Tekla.Common.Geometry.Vector3,System.Double)">
            <summary>
            Gets the given <see cref="T:Tekla.Common.Geometry.Vector3"/> value as a <see cref="T:Tekla.Common.Geometry.Vector4"/> value.
            </summary>
            <param name="vector">The <see cref="T:Tekla.Common.Geometry.Vector3"/> value to get as a <see cref="T:Tekla.Common.Geometry.Vector4"/> value.</param>
            <param name="componentW">The value to assign to <see cref="P:Tekla.Common.Geometry.Vector4.W"/>.</param>
            <returns>The given <see cref="T:Tekla.Common.Geometry.Vector3"/> value as a <see cref="T:Tekla.Common.Geometry.Vector4"/> value.</returns>
        </member>
    </members>
</doc>
